```javascript
it("should display FreeText annotation", async () => {
  const { getDocument } = await import('../../src/display/api.js');
  const { buildGetDocumentParams } = await import('./test_utils.js');
  const loadingTask = getDocument(buildGetDocumentParams('bug1851498.pdf'));
  const pdfDocument = await loadingTask.promise;
  const pdfPage = await pdfDocument.getPage(1);
  const viewport = pdfPage.getViewport({ scale: 1 });
  const annotationLayer = new (await import('../../src/display/annotation_layer.js')).AnnotationLayer({
    div: document.createElement('div'),
    page: pdfPage,
    viewport: viewport,
    linkService: null,
    downloadManager: null,
  });
  const annotations = await pdfPage.getAnnotations();
  await annotationLayer.render({ annotations, page: pdfPage, viewport, linkService: null, downloadManager: null });
  const freeTextAnnotations = annotations.filter(annotation => annotation.subtype === 'FreeText');
  expect(freeTextAnnotations.length).toBeGreaterThan(0);
  const freeTextAnnotation = freeTextAnnotations[0];
  const freeTextElement = annotationLayer.div.querySelector(`[data-annotation-id="${freeTextAnnotation.id}"]`);
  expect(freeTextElement).not.toBeNull();
  expect(freeTextElement.querySelector('.annotationTextContent')).not.toBeNull();
});
```