it("should correctly render Russian characters in PDFs", async () => {
  const { getDocument } = await import('../../src/display/api.js');
  const { buildGetDocumentParams } = await import('./test_utils.js');
  const loadingTask = getDocument(buildGetDocumentParams('issue19550.pdf'));
  const { getGlyphMapForStandardFonts } = await import('../../src/core/standard_fonts.js');

  const expectedText = "Русский текст";
  const expectedGlyphs = new Set([570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600]);

  const pdf = await loadingTask.promise;
  const page = await pdf.getPage(1);
  const ops = await page.getOperatorList();
  const text = await page.getTextContent();

  const glyphMap = getGlyphMapForStandardFonts();
  const actualGlyphs = new Set();

  for (const op of ops) {
    if (op.op === 'Tj') {
      const textString = op.args[0].toString();
      const codePoints = Array.from(textString, (c) => c.codePointAt(0));
      actualGlyphs.add(glyphMap[codePoints[0]] || 0);
    }
  }

  expect(text.items[0].str).toBe(expectedText);
  expect(actualGlyphs).toEqual(expectedGlyphs);
});