it("should render text correctly with font fallback", async () => {
  const { getDocument } = await import("../../src/display/api.js");
  const { buildGetDocumentParams } = await import("./test_utils.js");
  const loadingTask = getDocument(buildGetDocumentParams("issue19234.pdf"));
  const pdfDocument = await loadingTask.promise;
  const page = await pdfDocument.getPage(1);
  const viewport = page.getViewport({ scale: 1.0 });
  const canvasFactory = new DefaultCanvasFactory();
  const canvasAndContext = canvasFactory.create(viewport.width, viewport.height);
  const renderTask = page.render({
    canvasContext: canvasAndContext.context,
    viewport,
  });
  await renderTask.promise;
  const imageData = canvasAndContext.context.getImageData(0, 0, viewport.width, viewport.height);
  const hasBlueText = Array.from(imageData.data).some((value, index) => {
    return index % 4 === 2 && value > 200; // Check for blue color in the text
  });
  expect(hasBlueText).toBe(true);
});