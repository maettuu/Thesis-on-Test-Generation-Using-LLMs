```javascript
it("should change the mouse cursor state according to the edge we resize from for added images and drawings in PDF documents", async () => {
  const { AnnotationEditor } = await import("../../src/display/editor/editor.js");
  const { AnnotationEditorUIManager } = await import("../../src/display/editor/tools.js");
  const editor = new AnnotationEditor({ uiManager: new AnnotationEditorUIManager() });
  editor.makeResizable();
  const resizerDiv = editor.#resizersDiv;
  const topLeftResizer = resizerDiv.querySelector(".resizer.topLeft");
  const topRightResizer = resizerDiv.querySelector(".resizer.topRight");
  const bottomLeftResizer = resizerDiv.querySelector(".resizer.bottomLeft");
  const bottomRightResizer = resizerDiv.querySelector(".resizer.bottomRight");
  const middleLeftResizer = resizerDiv.querySelector(".resizer.middleLeft");
  const middleRightResizer = resizerDiv.querySelector(".resizer.middleRight");
  const topMiddleResizer = resizerDiv.querySelector(".resizer.topMiddle");
  const bottomMiddleResizer = resizerDiv.querySelector(".resizer.bottomMiddle");

  // Check if the resizers are correctly added to the editor
  expect(resizerDiv.childElementCount).toBe(8);

  // Check if the resizers have the correct class names
  expect(topLeftResizer.classList.contains("resizer")).toBe(true);
  expect(topLeftResizer.classList.contains("topLeft")).toBe(true);
  expect(topRightResizer.classList.contains("resizer")).toBe(true);
  expect(topRightResizer.classList.contains("topRight")).toBe(true);
  expect(bottomLeftResizer.classList.contains("resizer")).toBe(true);
  expect(bottomLeftResizer.classList.contains("bottomLeft")).toBe(true);
  expect(bottomRightResizer.classList.contains("resizer")).toBe(true);
  expect(bottomRightResizer.classList.contains("bottomRight")).toBe(true);
  expect(middleLeftResizer.classList.contains("resizer")).toBe(true);
  expect(middleLeftResizer.classList.contains("middleLeft")).toBe(true);
  expect(middleRightResizer.classList.contains("resizer")).toBe(true);
  expect(middleRightResizer.classList.contains("middleRight")).toBe(true);
  expect(topMiddleResizer.classList.contains("resizer")).toBe(true);
  expect(topMiddleResizer.classList.contains("topMiddle")).toBe(true);
  expect(bottomMiddleResizer.classList.contains("resizer")).toBe(true);
  expect(bottomMiddleResizer.classList.contains("bottomMiddle")).toBe(true);
});
```