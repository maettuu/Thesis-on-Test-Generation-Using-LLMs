```javascript
it("should change mouse cursor state according to the edge when resizing images and drawings", async () => {
  const { AnnotationEditor } = await import("../../src/display/editor/editor.js");
  const { InkEditor } = await import("../../src/display/editor/ink.js");
  const { StampEditor } = await import("../../src/display/editor/stamp.js");

  const mockUIManager = {
    addToAnnotationStorage: () => {},
    addCommands: () => {},
    viewParameters: { realScale: 1, rotation: 0 },
  };

  const inkEditor = new InkEditor({
    uiManager: mockUIManager,
    parent: { pageIndex: 0, viewport: { rotation: 0, rawDims: { pageWidth: 100, pageHeight: 100, pageX: 0, pageY: 0 } } },
    id: "inkEditor1",
    x: 10,
    y: 10,
  });

  const stampEditor = new StampEditor({
    uiManager: mockUIManager,
    parent: { pageIndex: 0, viewport: { rotation: 0, rawDims: { pageWidth: 100, pageHeight: 100, pageX: 0, pageY: 0 } } },
    id: "stampEditor1",
    bitmapUrl: "http://example.com/image.png",
    x: 10,
    y: 10,
  });

  inkEditor.makeResizable();
  stampEditor.makeResizable();

  const inkResizers = inkEditor.div.querySelectorAll(".resizer");
  const stampResizers = stampEditor.div.querySelectorAll(".resizer");

  expect(inkResizers.length).toBeGreaterThan(0);
  expect(stampResizers.length).toBeGreaterThan(0);

  inkResizers.forEach(resizer => {
    expect(getComputedStyle(resizer).cursor).toMatch(/resize/);
  });

  stampResizers.forEach(resizer => {
    expect(getComputedStyle(resizer).cursor).toMatch(/resize/);
  });
});
```