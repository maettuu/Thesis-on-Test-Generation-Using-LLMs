```javascript
it("should render all inlined images correctly", async () => {
  const { getDocument } = await import("../../src/display/api.js");
  const { buildGetDocumentParams } = await import("./test_utils.js");

  const loadingTask = getDocument(buildGetDocumentParams("issue17794.pdf"));
  const pdfDocument = await loadingTask.promise;
  const page = await pdfDocument.getPage(1);

  const operatorList = new OperatorList();
  const task = new WorkerTask("test task");
  const partialEvaluator = new PartialEvaluator({
    xref: new XRefMock(),
    handler: null,
    pageIndex: 0,
    idFactory: createIdFactory(0),
    fontCache: null,
    builtInCMapCache: null,
    standardFontDataCache: null,
    globalImageCache: null,
    systemFontCache: null,
    options: { ignoreErrors: false },
  });

  await partialEvaluator.getOperatorList({
    stream: page.stream,
    task,
    resources: Dict.empty,
    operatorList,
  });

  const paintInlineImageOps = operatorList.fnArray.filter(
    fn => fn === OPS.paintInlineImageXObject
  );

  expect(paintInlineImageOps.length).toBeGreaterThan(1);
});
```