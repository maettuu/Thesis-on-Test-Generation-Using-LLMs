<think>
Okay, I need to write a regression test for the issue where adding an SVG image with a blob URL doesn't work. The patch provided modifies the ImageManager class in tools.js. 

First, I'll look at the problem. Before the patch, when trying to add an SVG using a blob URL, it probably failed because createImageBitmap isn't supported for SVGs. The patch replaces this by using FileReader to get the data URL and creates an Image element instead.

So, the test should check if the ImageManager correctly handles SVG blobs. 

I'll structure the test by importing the necessary modules, creating an ImageManager instance, and simulating the process of adding an SVG image. I'll create a sample SVG blob, call getFromUrl, and check if the data is correctly loaded.

I'll use Jest's async/await for promises. After adding the image, I'll verify that the bitmap is created and that it's marked as SVG. This ensures the patch works as intended.

I need to make sure the test is self-contained, uses dynamic imports, and doesn't add new dependencies. The test should fail before the patch and pass after, confirming the fix.
</think>

```javascript
it("should add SVG image with blob URL", async () => {
  const { ImageManager } = await import("../../src/display/editor/tools.js");
  const imageManager = new ImageManager();

  // Create a sample SVG blob
  const svg = "<svg xmlns='http://www.w3.org/2000/svg'></svg>";
  const blob = new Blob([svg], { type: "image/svg+xml" });
  const url = URL.createObjectURL(blob);

  // Get the image data
  const data = await imageManager.getFromUrl(url);

  // Clean up
  URL.revokeObjectURL(url);

  // Verify the image was loaded correctly
  expect(data).toBeTruthy();
  expect(data.bitmap).toBeTruthy();
  expect(data.isSvg).toBe(true);
});
```