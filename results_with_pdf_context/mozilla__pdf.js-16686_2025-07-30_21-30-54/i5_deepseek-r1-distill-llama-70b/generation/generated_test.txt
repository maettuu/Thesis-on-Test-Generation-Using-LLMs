it("should add SVG image with blob URL", async () => {
  const svgContent = '<svg><circle cx="50" cy="50" r="40" fill="red"/></svg>';
  const base64SVG = Buffer.from(svgContent).toString('base64');
  const dataUrl = `data:image/svg+xml;base64,${base64SVG}`;

  const mockImage = {
    src: null,
    onload: null,
    onerror: null,
    addEventListener: (event, callback) => {
      if (event === 'load') {
        callback();
      }
    }
  };

  const ImageMock = jest.fn(() => mockImage);

  const { ImageManager } = await import('../../src/display/editor/tools.js');

  const data = {
    bitmap: null,
    isSvg: false,
    svgUrl: null
  };

  const imageManager = new ImageManager();

  // Mock the Image constructor
  const originalImage = global.Image;
  global.Image = ImageMock;

  try {
    await imageManager.addImage(dataUrl, data);
    await new Promise(resolve => setTimeout(resolve, 100)); // Wait for onload

    expect(data.bitmap).toBe(mockImage);
    expect(data.isSvg).toBe(true);
  } finally {
    global.Image = originalImage;
  }
});