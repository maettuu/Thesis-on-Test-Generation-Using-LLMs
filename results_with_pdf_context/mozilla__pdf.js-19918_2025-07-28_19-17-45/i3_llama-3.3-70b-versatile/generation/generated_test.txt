it("should support decoding cmyk jpeg image using ImageDecoder", async () => {
  const { PDFDocumentProxy } = await import("../../src/display/api.js");
  const { PDFDataRangeTransport } = await import("../../src/display/api.js");
  const { JpegImage } = await import("../../src/core/jpg.js");
  const { JpegStream } = await import("../../src/core/jpeg_stream.js");
  const pdfData = await (await import("./test_utils.js")).fetchDataDOM(`${TEST_PDFS_PATH}cmyk.jpg`);
  const imageDecoderSupported = await JpegStream.canUseImageDecoderCMYK();
  if (!imageDecoderSupported) {
    console.log("ImageDecoder is not supported for CMYK JPEG images in this environment.");
    return;
  }
  const jpegImage = new JpegImage();
  jpegImage.parse(pdfData);
  const data = jpegImage.getData({ width: 100, height: 100, forceRGBA: true });
  const stream = new JpegStream({ dict: {}, getBytes: () => pdfData }, null, {});
  const useImageDecoder = JpegImage.canUseImageDecoder(pdfData);
  const image = await stream.getTransferableImage();
  expect(image).not.toBeNull();
});