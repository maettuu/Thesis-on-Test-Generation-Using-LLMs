it("should decode CMYK JPEG using ImageDecoder", async () => {
  const { JpegStream } = await import("../../src/core/jpeg_stream.js");
  const { JpegImage } = await import("../../src/core/jpg.js");

  // Setup sample CMYK JPEG data
  const cmykJpegData = new Uint8Array([
    0xFF, 0xD8, 0xFF, 0xDB, 0x00, 0x43, 0x00, 0x0D, 0x0C, 0x09, 0x3F, 0x00,
    0x0C, 0x11, 0x0A, 0x0E, 0x0C, 0x0A, 0x1F, 0x0E, 0x19, 0x1C, 0x1F,
    0x19, 0x1E, 0x1A, 0x1F, 0x24, 0x1D, 0x35, 0x1C, 0x1E, 0x1F, 0x1E,
    0x11, 0x1F, 0x1E, 0x1D, 0x1F, 0x1F, 0x1E, 0x1C, 0x1F, 0x1E, 0x1F,
    0x1E, 0x1E, 0x1F, 0x1E, 0x1F, 0x1E, 0x1A, 0x1F, 0x1E, 0x1B, 0x1F,
    0x1C, 0x1F, 0x1E, 0x1D, 0x1F, 0x1F, 0x1E, 0x1E, 0x1F, 0x1E, 0x1F,
    0x1F, 0xFF, 0xC0, 0x00, 0x11, 0x08, 0x00, 0x01, 0x00, 0x01, 0x01,
    0x01, 0xFF, 0xC4, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xFF, 0xC4, 0x00, 0x14, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0xFF, 0xDA, 0x00, 0x04, 0x01, 0x00, 0x01, 0x00, 0x3F, 0x00,
    0x00, 0x00, 0x02, 0x1C, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0xFF, 0xD9
  ]);

  // Create JpegStream instance with CMYK color space
  const jpegStream = new JpegStream({
    dict: {},
    stream: { getBytes: () => cmykJpegData },
    params: new Dict({ ColorTransform: 1 })
  });

  // Use ImageDecoder if available
  const image = await jpegStream.getTransferableImage();

  expect(image).not.toBeNull();
});