it("should use ImageDecoder for CMYK JPEG images", async () => {
  const { JpegImage, JpegStream } = await import("./jpg.js");
  const { shadow } = await import("../shared/util.js");

  // Setup: Enable ImageDecoder support
  JpegStream.setOptions({ isImageDecoderSupported: true });

  // Create a sample CMYK JPEG data (this is a minimal CMYK JPEG for testing)
  const cmykJpegData = new Uint8Array([
    0xFF, 0xD8, 0xFF, 0xE1, 0x00, 0x18, 0x45, 0x78, 0x69, 0x66, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xFF, 0xFE, 0x00, 0x18, 0x32, 0x43, 0x53, 0x4D, 0x4F, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
    0xC0, 0x00, 0x11, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xFF, 0xC4, 0x00, 0x14, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xFF, 0xC4, 0x00, 0x14, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xD9
  ]);

  // Test the canUseImageDecoder function with CMYK data
  const result = await JpegImage.canUseImageDecoder(cmykJpegData);

  // After the patch, canUseImageDecoder should return an object with cmyk: true
  // for CMYK images when ImageDecoder is supported
  expect(result).toEqual({ cmyk: true });
});