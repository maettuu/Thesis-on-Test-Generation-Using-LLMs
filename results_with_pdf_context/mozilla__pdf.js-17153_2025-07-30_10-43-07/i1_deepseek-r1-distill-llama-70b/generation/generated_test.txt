it("should handle missing navigatorplatform correctly", async () => {
  const { FeatureTest } = await import("../../src/shared/util.js");

  // Mock navigator scenarios
  const scenarios = [
    // 1. navigator exists but platform is undefined
    { navigator: {} },
    // 2. navigator exists but platform is not a string
    { navigator: { platform: null } },
    // 3. navigator exists and platform is "Mac"
    { navigator: { platform: "Mac" } }
  ];

  const expectedMacResults = [false, false, true];

  for (let i = 0; i < scenarios.length; i++) {
    const { navigator } = scenarios[i];
    jest.spyOn(global, "navigator", "get").mockImplementation(() => navigator);

    const result = await FeatureTest.platform.isMac;

    expect(result).toBe(expectedMacResults[i]);

    global.navigator.mockRestore();
  }
});