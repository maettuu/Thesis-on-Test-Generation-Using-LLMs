```javascript
it("should display top and bottom images in pdf file", async () => {
  const { PDFDocument } = await import("../../src/core/document.js");
  const { PartialEvaluator } = await import("../../src/core/evaluator.js");
  const { OperatorList } = await import("../../src/core/operator_list.js");
  const { Util } = await import("../../src/shared/util.js");

  const pdfDoc = await PDFDocument.load(await (await import("./test_utils.js")).TestPdfsServer.getPdfBuffer("issue-pdf.pdf"));
  const page = pdfDoc.getPage(1);
  const evaluator = new PartialEvaluator({ page });
  const operatorList = new OperatorList();

  evaluator.beginOperatorList(operatorList);
  await evaluator.run();
  evaluator.endOperatorList();

  const expectedOps = [
    "save",
    "setGState",
    "beginMarkedContentProps",
    "paintImageXObject",
    "endMarkedContent",
    "restore",
  ];

  const actualOps = operatorList.ops.map((op) => op.fn);

  Util.assert(actualOps.length === expectedOps.length, "Operator list length mismatch");
  expectedOps.forEach((expectedOp, index) => {
    Util.assert(actualOps[index] === expectedOp, `Operator at index ${index} mismatch`);
  });
});
```