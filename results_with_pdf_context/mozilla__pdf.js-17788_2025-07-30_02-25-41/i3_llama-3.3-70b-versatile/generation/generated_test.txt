it("should read highlighted text during editing inside a PDF", async () => {
  const { PDFWorker, build, getDocument } = await import("../../src/display/api.js");
  const { DOMSVGFactory } = await import("../../src/display/display_utils.js");
  const { DrawLayer } = await import("../../src/display/draw_layer.js");
  const { HighlightEditor } = await import("../../src/display/editor/highlight.js");
  const { AnnotationEditorUIManager } = await import("../../src/display/editor/tools.js");

  const pdfUrl = "https://example.com/example.pdf";
  const pdf = await getDocument({ url: pdfUrl });
  const pdfWorker = new PDFWorker();
  const annotationEditorUIManager = new AnnotationEditorUIManager();

  const drawLayer = new DrawLayer();
  const highlightEditor = new HighlightEditor({});

  const highlightedText = "This is a highlighted text";
  drawLayer.highlight(highlightEditor.#highlightOutlines, "yellow", 0.5);
  const highlightedElement = drawLayer.#mapping.get(highlightEditor.#id);

  const expectedText = highlightedText;
  const actualText = highlightedElement.querySelector("mark").textContent;

  expect(actualText).toBe(expectedText);
});