```javascript
it("should ignore invalid operator tokens like 'toString'", async () => {
  const { getDocument } = await import('../../src/display/api.js');
  const { buildGetDocumentParams } = await import('./test_utils.js');
  const loadingTask = getDocument(buildGetDocumentParams('issue17554.pdf'));
  const pdfDocument = await loadingTask.promise;
  const pdfPage = await pdfDocument.getPage(1);
  const operatorList = await pdfPage.getOperatorList();
  const opMap = EvaluatorPreprocessor.opMap;
  let errorOccurred = false;
  try {
    for (const item of operatorList.items) {
      if (item.str === 'toString') {
        const op = opMap[item.str];
        if (op !== undefined) {
          throw new Error(`Invalid operator 'toString' was not ignored`);
        }
      }
    }
  } catch (error) {
    errorOccurred = true;
  }
  if (errorOccurred) {
    throw new Error('Test failed: an error occurred while processing the operator list');
  }
});
```