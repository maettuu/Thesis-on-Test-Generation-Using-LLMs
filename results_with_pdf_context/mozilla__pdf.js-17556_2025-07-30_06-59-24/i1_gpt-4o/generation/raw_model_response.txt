```javascript
it("should ignore invalid PDF operators like 'toString'", async () => {
  const { getDocument } = await import("../../src/display/api.js");
  const { buildGetDocumentParams } = await import("./test_utils.js");
  const loadingTask = getDocument(buildGetDocumentParams("issue17554.pdf"));
  const pdfDocument = await loadingTask.promise;
  const page = await pdfDocument.getPage(1);
  const operatorList = new OperatorList();
  const task = new WorkerTask("OperatorListTask");
  const partialEvaluator = new PartialEvaluator({
    xref: new XRefMock(),
    handler: null,
    pageIndex: 0,
    idFactory: createIdFactory(0),
    fontCache: new Map(),
    builtInCMapCache: new Map(),
    standardFontDataCache: new Map(),
  });
  await partialEvaluator.getOperatorList({
    stream: page.stream,
    task,
    resources: Dict.empty,
    operatorList,
  });
  const actual = operatorList.argsArray.some(args => args.includes("toString"));
  const expected = false;
  expect(actual).toEqual(expected);
});
```