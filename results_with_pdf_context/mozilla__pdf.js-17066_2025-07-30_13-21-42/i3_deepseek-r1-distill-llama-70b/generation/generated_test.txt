it("should render readonly form field when AnnotationMode is ENABLED", async () => {
  const { getDocument } = await import("../../src/display/api.js");
  const { buildGetDocumentParams } = await import("./test_utils.js");
  const loadingTask = getDocument(buildGetDocumentParams('issue17064_readonly.pdf'));

  const pdf = await loadingTask.promise;
  const page = await pdf.getPage(1);
  const viewport = page.getViewPort({ scale: 1 });
  const div = document.createElement('div');

  const annotationLayer = new (await import("../../src/display/annotation_layer.js")).AnnotationLayer({
    div,
    page,
    viewport,
    l10n: new (await import("../../web/genericl10n.js")).NullL10n(),
    annotationCanvasMap: new Map(),
    accessibilityManager: null,
  });

  const renderForms = true;
  await annotationLayer.render({
    annotations: await page.getAnnotations(),
    renderForms,
    enableScripting: true,
    hasJSActions: false,
    parent: {
      page,
      viewport,
      zIndex: 0,
    },
  });

  const textWidgetElements = div.getElementsByClassName('textWidgetAnnotation');
  const textContent = textWidgetElements[0].textContent;

  expect(textWidgetElements.length).toBe(1);
  expect(textContent).toBe("Foo");
});