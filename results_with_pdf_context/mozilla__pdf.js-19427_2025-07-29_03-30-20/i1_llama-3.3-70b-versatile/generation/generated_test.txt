it("should correctly map a multicharacter ligature to its proper unicode code", async () => {
  const { adjustMapping } = await import("../../src/core/fonts.js");
  const glyphId = 10;
  const charCodeToGlyphId = { "65": glyphId };
  const hasGlyph = id => id !== 0;
  const newGlyphZeroId = 0;
  const toUnicode = new Map();
  // "ï¬ƒ" normalized (NFKD) becomes "ffi", which should be mapped to 0xfb03.
  // Pre-patch, the mapping would incorrectly return the code point of "f" (102).
  toUnicode.set("65", "ffi");
  const { toUnicodeExtraMap } = adjustMapping(charCodeToGlyphId, hasGlyph, newGlyphZeroId, toUnicode);
  const mapped = toUnicodeExtraMap.get(0xfb03);
  if (mapped !== glyphId) {
    throw new Error(`Ligature mapping incorrect: got ${mapped} instead of ${glyphId}`);
  }
});
