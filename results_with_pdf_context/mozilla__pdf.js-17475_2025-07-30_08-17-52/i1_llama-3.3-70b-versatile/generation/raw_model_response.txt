```javascript
it("should display highlight on cropped pdf when saving/printing", async () => {
  const { getDocument } = await import('../../src/display/api.js');
  const { buildGetDocumentParams } = await import('./test_utils.js');
  const loadingTask = getDocument(buildGetDocumentParams('bug1872721.pdf'));
  const pdfDoc = await loadingTask.promise;
  const pdfPage = pdfDoc.getPage(1);
  const { AnnotationEditor } = await import("../../src/display/editor/editor.js");
  const { AnnotationEditorUIManager } = await import("../../src/display/editor/tools.js");
  const { Util } = await import("../../shared/util.js");
  const annotationEditor = new AnnotationEditor({
    annotationType: AnnotationEditor.AnnotationEditorType.HIGHLIGHT,
    pageIndex: 0,
    page: pdfPage,
  }, new AnnotationEditorUIManager());
  const highlightEditor = new annotationEditor.constructor({
    annotationType: annotationEditor.constructor.AnnotationEditorType.HIGHLIGHT,
    pageIndex: 0,
    page: pdfPage,
    boxes: [{ x: 0.1, y: 0.1, width: 0.2, height: 0.2 }],
  }, new AnnotationEditorUIManager());
  const serializedData = highlightEditor.serialize();
  const deserializedEditor = annotationEditor.constructor.deserialize(serializedData, pdfPage, new AnnotationEditorUIManager());
  const expectedQuadPoints = serializedData.quadPoints;
  const actualQuadPoints = deserializedEditor.serialize().quadPoints;
  expect(actualQuadPoints).toEqual(expectedQuadPoints);
});
```