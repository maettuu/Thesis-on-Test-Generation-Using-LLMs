it("should render text correctly when browserdisplayusedocumentfonts is set to", async () => {
  const { getDocument } = await import('../../src/display/api.js');
  const { buildGetDocumentParams } = await import('./test_utils.js');
  const loadingTask = getDocument(buildGetDocumentParams('issue20065.pdf'));
  const pdfDocument = await loadingTask.promise;
  const pdfPage = await pdfDocument.getPage(1);
  const canvasFactory = await import('../../src/display/canvas_factory.js');
  const canvas = canvasFactory.DOMCanvasFactory.createCanvas(100, 100);
  const context = canvas.getContext('2d');
  const renderTask = pdfPage.render({
    canvasContext: context,
    viewport: pdfPage.getViewport({ scale: 1 }),
  });
  await renderTask.promise;
  const expectedText = "Example Text";
  const actualText = context.canvas.toDataURL();
  const { PDFPageProxy } = await import('../../src/display/api.js');
  const pageProxy = new PDFPageProxy(pdfPage);
  const textContent = await pageProxy.getTextContent();
  const textItems = textContent.items;
  let text = '';
  for (const item of textItems) {
    text += item.str;
  }
  expect(text).toContain(expectedText);
});