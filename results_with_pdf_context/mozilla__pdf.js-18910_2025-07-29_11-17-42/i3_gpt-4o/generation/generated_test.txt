it("should use ImageDecoder for JPEG images when supported", async () => {
  const { JpegStream } = await import("../../src/core/jpeg_stream.js");
  const { BaseStream } = await import("../../src/core/base_stream.js");

  class MockStream extends BaseStream {
    constructor() {
      super();
      this.data = new Uint8Array([0xff, 0xd8, 0xff, 0xe0, 0x00, 0x10, 0x4a, 0x46, 0x49, 0x46, 0x00, 0x01]);
    }
    getBytes() {
      return this.data;
    }
  }

  const mockStream = new MockStream();
  const jpegStream = new JpegStream(mockStream, mockStream.data.length, null);

  const canUseImageDecoder = await JpegStream.canUseImageDecoder;
  const transferableImage = await jpegStream.getTransferableImage();

  if (canUseImageDecoder) {
    expect(transferableImage).not.toBeNull();
  } else {
    expect(transferableImage).toBeNull();
  }
});