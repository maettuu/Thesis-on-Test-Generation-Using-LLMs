it("should apply textRise offset on text translation in Type3 fonts", async () => {
  const { CanvasGraphics } = await import("../../src/display/canvas.js");
  const { strict: assert } = await import("assert");
  const fakeCtx = {
    translateCalls: [],
    save() {},
    restore() {},
    transform(..._args) {},
    translate(x, y) {
      this.translateCalls.push([x, y]);
    },
    scale(..._args) {}
  };
  const commonObjs = {};
  const objs = {};
  const canvasFactory = {};
  const filterFactory = {};
  const optionalContentConfig = {};
  const annotationCanvasMap = {};
  const pageColors = {};
  const canvasGraphics = new CanvasGraphics(
    fakeCtx,
    commonObjs,
    objs,
    canvasFactory,
    filterFactory,
    { optionalContentConfig },
    annotationCanvasMap,
    pageColors
  );
  canvasGraphics.current.textMatrix = [1, 0, 0, 1, 0, 0];
  canvasGraphics.current.x = 10;
  canvasGraphics.current.y = 20;
  canvasGraphics.current.textRise = 5;
  canvasGraphics.current.textHScale = 1;
  canvasGraphics.current.fontDirection = 1;
  canvasGraphics.current.fontSize = 10;
  canvasGraphics.current.font = { charProcOperatorList: {} };
  canvasGraphics.showType3Text([]);
  assert.strictEqual(fakeCtx.translateCalls.length, 1);
  const [tx, ty] = fakeCtx.translateCalls[0];
  assert.strictEqual(tx, 10);
  assert.strictEqual(ty, 25);
});