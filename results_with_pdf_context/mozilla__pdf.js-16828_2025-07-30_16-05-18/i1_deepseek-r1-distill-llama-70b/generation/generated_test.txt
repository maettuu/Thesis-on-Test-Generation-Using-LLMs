it("should create a new editor when pasting an image from clipboard", async () => {
  const { AnnotationEditorUIManager } = await import("../../src/display/editor/tools.js");
  const { StampEditor } = await import("../../src/display/editor/stamp.js");

  // Mock clipboard event with image data
  const mockClipboardEvent = {
    preventDefault: () => {},
    clipboardData: {
      items: [
        {
          type: "image/png",
          getAsFile: () => new File([/* png data */ "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNkYAAAAAYAAjCB0C8AAAAASUVORK5CYII="], "image/png")
        }
      ]
    }
  };

  // Mock UI manager
  const uiManager = new AnnotationEditorUIManager(
    {} as any,
    {} as any,
    {} as any,
    {} as any,
    {} as any
  );

  // Mock editor layer
  const mockLayer = {
    deserialize: () => new StampEditor({}),
    add: () => {}
  };

  // Register editor types
  uiManager.registerEditorTypes([StampEditor]);

  // Add mock layer
  uiManager.addLayer(mockLayer);

  // Call paste method
  uiManager.paste(mockClipboardEvent);

  // Verify that a new editor was created
  expect(uiManager.#allEditors.size).toBeGreaterThan(0);
});