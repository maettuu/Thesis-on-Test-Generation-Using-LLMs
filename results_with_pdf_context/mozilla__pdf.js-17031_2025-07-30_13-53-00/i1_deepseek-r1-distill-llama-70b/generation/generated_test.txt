it("should delay moving editor in DOM when changing font size", async () => {
  const { AnnotationEditor } = await import("../../src/display/editor/editor.js");
  const { CommandManager } = await import("../../src/display/editor/tools.js");

  const mockParent = {
    moveEditorInDOM: jest.fn(),
  };

  const editor = new AnnotationEditor({
    parent: mockParent,
    uiManager: new CommandManager(),
    id: "test-editor",
    name: "FreeText",
    isCentered: false,
  });

  // Mock the font size slider change
  const fontSizeSlider = {
    value: 20,
  };

  // Simulate the font size change
  editor.fontSize = fontSizeSlider.value;

  // The moveInDOM method should now be called with a timeout
  expect(mockParent.moveEditorInDOM).not.toHaveBeenCalled();

  // Wait for the timeout to trigger
  jest.useFakeTimers();
  jest.runAllTimers();

  expect(mockParent.moveEditorInDOM).toHaveBeenCalled();
});