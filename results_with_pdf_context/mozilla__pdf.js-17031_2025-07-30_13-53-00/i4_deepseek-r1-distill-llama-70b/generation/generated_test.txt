it("should update font size without blocking UI", async () => {
  const { AnnotationEditor } = await import("../../src/display/editor/editor.js");
  const { createIdFactory } = await import("../../src/core/util.js");
  const { buildGetDocumentParams } = await import("../../src/core/document.js");

  const idFactory = createIdFactory();
  const params = buildGetDocumentParams(idFactory);
  const editor = new AnnotationEditor({
    parent: {
      pageIndex: 0,
      moveEditorInDOM: () => {},
      setSelected: () => {},
      setParent: () => {},
      viewport: {
        rotation: 0,
        pageWidth: 100,
        pageHeight: 100,
      },
    },
    uiManager: {},
    id: "test-editor",
    x: 10,
    y: 20,
  });

  editor.width = 0.5;
  editor.height = 0.5;
  editor.fixAndSetPosition();

  const mockMoveInDOM = jest.fn();
  editor.moveInDOM = mockMoveInDOM;

  // Simulate font size changes
  editor.height = 0.6;
  editor.width = 0.6;
  editor.fixAndSetPosition();

  // Check that moveInDOM is debounced and called only once
  expect(mockMoveInDOM).toHaveBeenCalled();
  const [x, y] = [editor.x, editor.y];
  expect(x).toBeCloseTo(0.1);
  expect(y).toBeCloseTo(0.2);
});