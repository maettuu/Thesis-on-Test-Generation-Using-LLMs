it("should delete selected annotation when pressing Delete on Mac", async () => {
  const { AnnotationEditorUIManager, AnnotationEditorLayer } = await import("../../src/display/editor/tools.js");
  const { Annotation, MarkupAnnotation } = await import("../../src/core/annotation.js");

  // Mock the necessary objects
  const pdfDocument = {
    annotationStorage: {
      getAnnotations: () => [],
      addAnnotation: jest.fn(),
      removeAnnotation: jest.fn(),
    },
    filterFactory: {},
  };

  const eventBus = {
    _on: jest.fn(),
    _off: jest.fn(),
  };

  const container = document.createElement("div");
  const pageColors = {};

  // Initialize the AnnotationEditorUIManager
  const annotationEditorUIManager = new AnnotationEditorUIManager(
    container,
    eventBus,
    pdfDocument,
    pageColors
  );

  // Create an AnnotationEditorLayer
  const annotationEditorLayer = new AnnotationEditorLayer();
  annotationEditorUIManager.#activeEditor = annotationEditorLayer;

  // Create a test annotation
  const annotation = new MarkupAnnotation({
    id: "test-annotation",
    type: "highlight",
    color: "#ff0000",
    page: 1,
  });

  // Add the annotation to storage
  pdfDocument.annotationStorage.addAnnotation(annotation);

  // Select the annotation
  annotationEditorLayer.selectAnnotation(annotation.id);

  // Simulate Mac Delete key press
  const deleteEvent = new KeyboardEvent("keydown", {
    key: "Delete",
    keyCode: 46,
    metaKey: true,
  });

  // Trigger the keydown handler
  annotationEditorUIManager.keydown(deleteEvent);

  // Verify the annotation was removed
  expect(pdfDocument.annotationStorage.removeAnnotation).toHaveBeenCalled();
});