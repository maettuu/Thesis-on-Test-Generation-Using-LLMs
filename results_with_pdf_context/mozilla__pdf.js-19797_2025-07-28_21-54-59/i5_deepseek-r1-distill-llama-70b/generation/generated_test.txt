it("should not throw null error when drawing annotations", async () => {
  const { PDFDocument } = await import("../../src/core/document.js");
  const { AnnotationEditorUIManager } = await import("../../src/display/editor/tools.js");
  const { TouchManager } = await import("../../src/display/touch_manager.js");

  const pdfDoc = await PDFDocument.load(new Uint8Array());
  const container = document.createElement("div");
  const annotationLayer = new AnnotationEditorUIManager(pdfDoc, container);
  const touchManager = new TouchManager(container);

  // Simulate touch events that would trigger the bug
  const errorPromise = new Promise(resolve => {
    try {
      const touchStartEvent = new TouchEvent("touchstart", { touches: [{}], targetTouches: [{}] });
      const touchMoveEvent = new TouchEvent("touchmove", { touches: [{}], targetTouches: [{}] });
      const touchEndEvent = new TouchEvent("touchend", { touches: [], targetTouches: [] });

      annotationLayer.enableDrawing();
      touchManager.handleEvent(touchStartEvent);
      touchManager.handleEvent(touchMoveEvent);
      touchManager.handleEvent(touchEndEvent);
      resolve();
    } catch (error) {
      resolve(error);
    }
  });

  await expect(errorPromise).resolves.toBeUndefined();

  // Cleanup
  pdfDoc.close();
  container.remove();
});