it("should render a PDF with many pages without slowing down", async () => {
  const { PDFDocument } = await import("../../src/core/document.js");
  const { MessageHandler } = await import("../../src/shared/message_handler.js");
  const { PDFWorker } = await import("../../src/display/api.js");

  const pdfWorker = new PDFWorker();
  const messageHandler = new MessageHandler("test", "test", pdfWorker);

  const pdfDoc = await PDFDocument.load(await (await import("../../src/display/fetch_stream.js")).PDFFetchStream.fetch("path_to_large_pdf_file.pdf"));
  const numPages = pdfDoc.numPages;

  let pagesRendered = 0;
  for (let i = 1; i <= numPages; i++) {
    const page = await pdfDoc.getPage(i);
    await page.render({ canvasContext: null, viewport: null });
    pagesRendered++;
  }

  expect(pagesRendered).toBe(numPages);
});