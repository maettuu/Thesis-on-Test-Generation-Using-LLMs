it("should handle many messages efficiently", async () => {
  const { LoopbackPort } = await import("../../src/display/api.js");
  const port = new LoopbackPort();
  const messageHandler = new MessageHandler("source", "target", port);
  const results = [];

  messageHandler.on("testAction", () => ({
    data: "Test data",
  }));

  const promises = [];
  for (let i = 0; i < 1000; i++) {
    const promise = messageHandler.sendWithPromise("testAction", {
      id: i,
    });
    promises.push(promise);
  }

  const startTime = Date.now();
  await Promise.all(promises);
  const endTime = Date.now();

  expect(promises.length).toBe(1000);
  expect(endTime - startTime).toBeLessThan(500);
});