it("should skip useless tasks in the worker to improve fast scrolling with scanned books", async () => {
  const { MessageHandler } = await import("../../src/shared/message_handler.js");
  const { PDFWorkerUtil } = await import("../../src/display/api.js");
  const { PDFDocumentLoadingTask } = await import("../../src/display/api.js");

  const comObj = {
    addEventListener: jest.fn(),
    postMessage: jest.fn(),
  };

  const messageHandler = new MessageHandler("source", "target", comObj);
  const actionHandler = {
    renderPage: jest.fn(() => Promise.resolve()),
  };
  messageHandler.actionHandler = actionHandler;

  const data = {
    targetName: "source",
    action: "renderPage",
    data: {},
    streamId: 1,
  };

  const cancelData = {
    targetName: "source",
    stream: "CANCEL",
    streamId: 1,
  };

  messageHandler._onComObjOnMessage({ data: data });
  messageHandler._onComObjOnMessage({ data: cancelData });

  expect(actionHandler.renderPage).not.toHaveBeenCalled();
});