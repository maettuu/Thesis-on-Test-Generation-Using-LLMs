<think>
Okay, I need to write a test that verifies the fix for the issue where emojis aren't shown in PDFs. The test should fail before the patch and pass after. Let me think about how to approach this.

First, I'll look at the provided code changes. The patch modifies `annotation.js` and `core_utils.js`. It seems to involve how fonts are handled, especially with FakeUnicodeFont. The problem was that emojis weren't rendering correctly, probably because the font didn't support them, so the code now uses a fallback font like sans-serif.

I need to create a test that checks if the PDF with emojis renders correctly. The test will load the PDF, extract text from an annotation, and check if the emoji characters are present.

I'll start by importing the necessary modules. I'll use `getDocument` from the display API to load the PDF. Then, I'll open the PDF and get the first page. I'll ensure the PDF has text annotations with emojis.

In the test, I'll create a PDF document using `getDocument` with the provided `bug1669097.pdf`. Then, I'll get the first page and its annotations. I'll loop through the annotations, focusing on text annotations, and extract their text content.

I expect that before the patch, the text might be garbled or missing emojis. After the patch, the text should include the emojis correctly. So, in the test, I'll check if the extracted text includes the expected emoji characters.

I'll write an async function in the test block. I'll handle any errors and use `await` for asynchronous operations. I'll also need to ensure that the PDF is loaded correctly and that the annotations are processed properly.

I should structure the test to fail if the text doesn't contain the expected emojis. That way, after applying the patch, the test will pass, confirming the fix.

I'll also make sure to clean up any created documents to avoid memory leaks.

So, putting it all together, the test will load the PDF, check the annotations, and verify the presence of emojis in the text. This should validate that the regression is fixed.
</think>

```javascript
it("should correctly render emojis in PDFs", async () => {
  const { getDocument } = await import("../../src/display/api.js");
  const { buildGetDocumentParams } = await import("./test_utils.js");
  const loadingTask = getDocument(buildGetDocumentParams("bug1669097.pdf"));
  const pdf = await loadingTask;
  const pageIndex = 0;
  const page = await pdf.getPage(pageIndex);
  const annotations = await page.getAnnotations();
  const annotation = annotations.find(a => a.data.annotationType === AnnotationType.TEXT);
  const text = await annotation.extractTextContent();
  expect(text.textContent).toContain("üëç");
});
```