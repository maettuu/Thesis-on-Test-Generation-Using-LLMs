<think>
Okay, I need to write a regression test for the issue where emojis aren't showing up in PDFs. The user provided a patch, and I have to ensure the test fails before the patch and passes after.

First, I'll look at the changes in the patch. The main modifications are in `annotation.js`, `core_utils.js`, and `default_appearance.js`. The key change is removing `FakeUnicodeFont.toUnicodeStream` from the `_streams` array in `annotation.js` and modifying how `ToUnicode` is set in the font descriptor.

The issue is that emojis (which are Unicode characters) weren't rendering in PDFs. The patch likely corrects how Unicode fonts are handled.

I need to create a test that checks if the generated PDF includes the correct Unicode characters. The test should generate a PDF with a free text annotation containing emojis, then check if the PDF's content streams include the expected Unicode code points.

I'll use the provided test file `test/unit/annotation_spec.js` as a base. I'll import necessary modules like `getDocument` and `buildGetDocumentParams` to load the PDF. 

I'll write an `it` block that loads the test PDF, extracts the first page, and checks the content streams. I'll look for the presence of the expected Unicode characters (like "ðŸ‘‹") in the stream data.

Before the patch, the streams might not include these characters, causing the test to fail. After the patch, they should be present, making the test pass.

I'll structure the test to load the PDF, get the page, and search the content for the Unicode string. If found, the test passes; otherwise, it fails.

I'll make sure the test is self-contained, using only the provided imports and no new dependencies. The test will be concise and focused on verifying the fix.
</think>

```javascript
it("should correctly render emojis in PDFs", async () => {
  const { getDocument } = await import('../../src/display/api.js');
  const { buildGetDocumentParams } = await import('./test_utils.js');
  const loadingTask = getDocument(buildGetDocumentParams('bug1669097.pdf'));
  const { numPages, getPage } = await loadingTask;
  const page = await getPage(1);
  const content = await page.getTextContent();
  const expectedUnicodeString = "ðŸ‘‹"; // The emoji present in the PDF
  const actualContent = content.items[0].str;
  expect(actualContent).toContain(expectedUnicodeString);
});
```