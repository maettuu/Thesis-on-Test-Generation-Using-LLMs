<think>
Okay, I need to write a regression test for the issue where emojis aren't shown in PDFs. The patch provided is supposed to fix this by correctly handling Unicode characters greater than 0xFFFF. 

First, I should understand the problem. Emojis are usually represented by Unicode code points above the Basic Multilingual Plane (BMP), which means they're stored as surrogate pairs in JavaScript. The bug occurs because the code wasn't handling these surrogate pairs correctly, leading to missing emojis in the PDF.

Looking at the patch, I see changes in `annotation.js`, `core_utils.js`, and `default_appearance.js`. The key changes involve removing `FakeUnicodeFont.toUnicodeStream` and using `Name.get("Identity-H")` instead. Also, `codePointIter` was added to iterate over code points correctly, which is crucial for handling surrogate pairs.

So, the test needs to verify that after the patch, emojis are correctly rendered. I'll use the provided PDF file `bug1669097.pdf` which contains emojis. 

I'll structure the test using Jest. The test will load the PDF, extract the first page, and check the text content for the presence of emojis. If the test passes after the patch, it means the emojis are correctly displayed.

I'll import the necessary modules dynamically to ensure compatibility. Then, I'll create a loading task for the PDF, get the first page, and render it. After rendering, I'll check the text content of the first text item. The expected result should include the emoji characters.

I need to make sure the test is self-contained and doesn't rely on external dependencies beyond what's provided. I'll use `await` for asynchronous operations and `expect` to assert that the text includes the expected emojis.

Finally, I'll write the test in a way that it fails before the patch (since emojis aren't rendered) and passes after the patch (since they are correctly shown). This ensures the regression test accurately verifies the fix.
</think>

```javascript
it("should correctly display emojis in PDFs", async () => {
  const { getDocument } = await import("../../src/display/api.js");
  const { buildGetDocumentParams } = await import("./test_utils.js");
  const loadingTask = getDocument(buildGetDocumentParams('bug1669097.pdf'));
  
  const { pdfDocument } = await loadingTask;
  const page = await pdfDocument.getPage(1);
  const textContent = await page.getTextContent();
  
  const expectedEmojis = ["üë©üèº", "üöÄ"];
  const actualText = textContent.items[0].str;
  
  expect(actualText).toContain(expectedEmojis[0]);
  expect(actualText).toContain(expectedEmojis[1]);
});
```