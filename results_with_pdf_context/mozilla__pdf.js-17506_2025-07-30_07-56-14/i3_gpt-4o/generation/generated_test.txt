it("should support highlighting images of text in addition to text", async () => {
  const { HighlightEditor } = await import("../../src/display/editor/highlight.js");
  const { AnnotationEditorLayer } = await import("../../src/display/editor/annotation_editor_layer.js");
  const { DrawLayer } = await import("../../src/display/draw_layer.js");
  const { AnnotationEditorUIManager } = await import("../../src/display/editor/tools.js");

  const uiManager = new AnnotationEditorUIManager();
  const drawLayer = new DrawLayer({ pageIndex: 0 });
  const annotationEditorLayer = new AnnotationEditorLayer({
    uiManager,
    pageIndex: 0,
    div: document.createElement("div"),
    drawLayer,
    viewport: { rotation: 0, rawDims: { pageWidth: 100, pageHeight: 100 } },
    l10n: null,
  });

  const highlightEditor = new HighlightEditor({
    parent: annotationEditorLayer,
    uiManager,
    highlightId: 1,
    highlight: { getOutlines: () => ({ box: { x: 0, y: 0, width: 1, height: 1 } }) },
    clipPathId: "clipPathId",
  });

  annotationEditorLayer.add(highlightEditor);

  const expected = true;
  const actual = highlightEditor.div.classList.contains("free");

  expect(actual).toBe(expected);
});