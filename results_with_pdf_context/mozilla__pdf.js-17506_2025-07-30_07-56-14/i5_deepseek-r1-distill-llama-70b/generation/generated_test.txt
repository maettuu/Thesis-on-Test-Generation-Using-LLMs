it("should support highlighting images of text", async () => {
  const { PDFDocument, PDFPage, getDocument } = await import("../../src/display/api.js");
  const { DrawLayer } = await import("../../src/display/draw_layer.js");
  const { HighlightEditor } = await import("../../src/display/editor/highlight.js");

  // Load test PDF with both text and image
  const pdf = await getDocument({
    data: await fetch("../../src/display/test_files/annotation_test.pdf").then(r => r.arrayBuffer()),
    cMapLoader: () => Promise.resolve(new Uint8Array())
  });

  const page = await pdf.getPage(1);
  const viewport = page.getViewPort({ scale: 1 });
  const drawLayer = new DrawLayer({ pageIndex: 0 });

  // Create highlight editor
  const highlightEditor = new HighlightEditor({
    parent: {
      drawLayer,
      viewport,
      add: () => {},
      remove: () => {},
      scale: 1
    },
    color: "rgb(255, 0, 0)",
    opacity: 0.5
  });

  try {
    // Highlight text
    const textHighlight = highlightEditor.highlight([
      { x: 100, y: 100, width: 200, height: 50 }
    ], "rgb(255, 0, 0)", 0.5);

    // Highlight image
    const imageHighlight = highlightEditor.highlight([
      { x: 300, y: 300, width: 150, height: 100 }
    ], "rgb(0, 255, 0)", 0.5);

    expect(textHighlight).toBeTruthy();
    expect(imageHighlight).toBeTruthy();
  } catch (error) {
    throw new Error("Highlighting failed", { cause: error });
  }
});