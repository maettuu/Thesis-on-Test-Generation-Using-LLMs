```javascript
it("should render password fields as password fields, not text fields", async () => {
  const { getDocument } = await import('../../src/display/api.js');
  const { buildGetDocumentParams } = await import('./test_utils.js');
  const loadingTask = getDocument(buildGetDocumentParams('issue19389.pdf'));
  const pdfDocument = await loadingTask.promise;
  const pdfPage = await pdfDocument.getPage(1);
  const annotationStorage = new (await import('../../src/display/annotation_storage.js')).AnnotationStorage();
  const renderTask = pdfPage.render({
    annotationStorage,
    renderInteractiveForms: true,
  });
  await renderTask.promise;
  const textWidgetAnnotations = pdfPage.annotations.filter(annotation => annotation instanceof (await import('../../src/core/annotation.js')).TextWidgetAnnotation);
  const passwordField = textWidgetAnnotations.find(annotation => annotation.data.password);
  const container = (await import('../../src/display/annotation_layer.js')).TextWidgetAnnotationElement.create({
    annotation: passwordField,
    renderForms: true,
    annotationStorage,
  }).render();
  const inputElement = container.querySelector('input');
  expect(inputElement.type).toBe('password');
});
```