<think>
Okay, I need to write a regression test for the issue where the console error occurs when loading the PDF worker script as a module. The error is because the MIME type isn't set correctly. The patch adds the MIME type when creating the blob, so the test should check that the MIME type is now correctly set.

First, I'll look at the existing test file, test/unit/api_spec.js. It imports necessary modules and has some setup. I can use the same setup but add a new test case.

I need to create a test that tries to import the worker script and checks if the MIME type is set to 'text/javascript'. If the patch is applied, this should pass; otherwise, it would fail.

I'll use a fetch call to get the worker script. Then, I'll create a Blob with the wrapper code, which is the same as what the patch does. By checking the type of the blob, I can assert that it's 'text/javascript'.

I should make sure the test is self-contained and doesn't rely on external files. Using the WORKER_SRC variable from the test file makes sense. I'll structure the test with async/await since fetch and blob creation are asynchronous.

I'll write the test using Jest's it function, describe the behavior, and include the necessary imports. The test will fail before the patch because the MIME type isn't set, and pass after because the patch adds it.

So, the test will fetch the worker script, create a blob with the wrapper, and check the type. This should cover the scenario and validate the fix.
</think>

it("should set correct MIME type when creating worker script blob", async () => {
  const response = await fetch(WORKER_SRC);
  const wrapper = `await import("${WORKER_SRC}");`;
  const blob = new Blob([wrapper], { type: "text/javascript" });
  expect(blob.type).toBe("text/javascript");
});