<think>
Okay, I need to write a regression test for the issue where the text layer and canvas don't always match in the PDF viewer on Windows. The patch provided is supposed to fix this by using specific fonts on Windows and Firefox.

First, I should understand the problem. The issue arises because the text widths computed by the canvas differ from those computed by the text layout engine, especially on Windows with certain fonts. The patch introduces a fontFamilyMap that uses Calibri and Lucida Console for sans-serif and monospace fonts when on Windows and Firefox.

So, the test needs to verify that after the patch, the correct fonts are being used. It should fail before the patch and pass after.

I'll use Jest for the test. The test will check if the fontFamily for 'sans-serif' includes 'Calibri' and for 'monospace' includes 'Lucida Console' when the platform is Windows and Firefox.

I need to mock the FeatureTest.platform to return isWindows and isFirefox as true. Then, create an instance of TextLayer and check the fontFamilyMap.

I'll import the necessary modules, set up the mocks, and assert the expected font families.

I should make sure the test is self-contained and doesn't rely on any external dependencies beyond the provided imports. Also, the test should be concise and only check the specific behavior fixed by the patch.
</think>

```javascript
it("should use Calibri and Lucida Console on Windows and Firefox", async () => {
  const { TextLayer, FeatureTest } = await import("../../src/display/text_layer.js");
  
  // Mock the platform to be Windows and Firefox
  const mockPlatform = {
    isWindows: true,
    isFirefox: true,
  };
  jest.spyOn(FeatureTest, "platform", "get").mockReturnValue(mockPlatform);

  // Create a TextLayer instance
  const textLayer = new TextLayer({
    textContentSource: new ReadableStream({
      start(controller) {
        controller.enqueue("test");
        controller.close();
      },
    }),
    container: document.createElement("div"),
    viewport: {
      scale: 1,
      rotation: 0,
      rawDims: {
        pageWidth: 100,
        pageHeight: 100,
        pageX: 0,
        pageY: 0,
      },
    },
  });

  // Get the fontFamilyMap
  const fontFamilyMap = TextLayer.fontFamilyMap;

  // Verify the expected fonts
  expect(fontFamilyMap.get("sans-serif")).toContain("Calibri");
  expect(fontFamilyMap.get("monospace")).toContain("Lucida Console");
});
```