<think>
Okay, I need to write a regression test for the numberToString function in pdf.js. The issue is that when the input is null, it returns "0", which is incorrect. The patch adds an assertion to ensure that the value is a number, so when null is passed, it should throw an error.

First, I'll look at the existing test file. It imports numberToString and other functions from core_utils.js. I can use that import.

I need to write a test that checks if passing null to numberToString throws an error. The test should be in the form of an it block using Jest or similar.

Before the patch, numberToString would return "0" for null. After the patch, since the function now has an assertion that value is a number, passing null should trigger that assertion and throw an error.

So the test will call numberToString with null and expect it to throw an error. I'll use try-catch inside the test. If an error is thrown, the test passes; otherwise, it fails.

I should also make sure that the test is self-contained and only tests this specific behavior. I'll structure it with try and catch blocks, and use expect to check if the error is caught.

Now, I'll write the code. I'll import the necessary function and set up the test case. The test will call numberToString(null) and expect an error to be thrown. If no error is thrown, the test will fail.

I think that's all. The test should correctly verify the fix.
</think>

```javascript
it("should throw an error when null is passed to numberToString", async () => {
  const { numberToString } = await import("../../src/core/core_utils.js");
  let errorThrown = false;
  try {
    numberToString(null);
  } catch (error) {
    errorThrown = true;
  }
  expect(errorThrown).toBe(true);
});
```