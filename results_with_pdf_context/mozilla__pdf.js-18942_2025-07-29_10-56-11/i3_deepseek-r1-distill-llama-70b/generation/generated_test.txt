it("should load fonts without peekBytes error in translateFont", async () => {
  const { getDocument } = await import('../../src/display/api.js');
  const { buildGetDocumentParams } = await import('./test_utils.js');
  const loadingTask = getDocument(buildGetDocumentParams('issue18941.pdf'));

  const { pdfDocument } = await loadingTask.promise;
  const page = await pdfDocument.getPage(1);

  const xref = new XRefMock();
  const idFactory = createIdFactory();

  const evaluator = new PartialEvaluator({
    xref,
    handler: new WorkerTask(),
    pageIndex: page.index,
    idFactory,
    fontCache: new Map(),
    builtInCMapCache: new Map(),
    standardFontDataCache: new Map(),
    globalImageCache: new Map(),
    systemFontCache: new Map(),
    options: {
      ignoreErrors: false,
    },
  });

  const fontName = "SomeFont";
  const fontRef = { refNum: 1, genNum: 0 };

  const loadFontPromise = evaluator.loadFont(
    fontName,
    fontRef,
    {},
    null,
    null
  );

  await expect(loadFontPromise).resolves.not.toThrow();
});