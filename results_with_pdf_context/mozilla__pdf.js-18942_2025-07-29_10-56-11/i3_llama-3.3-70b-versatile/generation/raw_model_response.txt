```javascript
it("should load font without throwing an error", async () => {
  const { getDocument } = await import('../../src/display/api.js');
  const { buildGetDocumentParams } = await import('./test_utils.js');
  const loadingTask = getDocument(buildGetDocumentParams('21_10_2024_FAMI_INVERSION_SAS_901060703_inicial.pdf'));
  const doc = await loadingTask.promise;
  const partialEvaluator = new PartialEvaluator({
    xref: doc.xref,
    handler: {},
    pageIndex: 0,
    idFactory: createIdFactory(),
    fontCache: new Map(),
    builtInCMapCache: new Map(),
    standardFontDataCache: new Map(),
    globalImageCache: new Map(),
    systemFontCache: new Map(),
  });
  const fontName = "SomeFont";
  const fontRef = new Dict({ Subtype: new Name("Type1") });
  const resources = new Dict();
  const fallbackFontDict = new Dict();
  const cssFontInfo = null;
  await expect(partialEvaluator.loadFont(fontName, fontRef, resources, fallbackFontDict, cssFontInfo)).not.toThrow();
});
```