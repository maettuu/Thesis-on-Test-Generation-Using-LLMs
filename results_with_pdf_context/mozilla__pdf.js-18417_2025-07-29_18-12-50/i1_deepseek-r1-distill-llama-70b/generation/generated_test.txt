it("should handle base href correctly for transparency filters", async () => {
  const { createServer } = await import("../../test_utils.js");
  const { PDFDocument } = await import("../../display/api.js");

  const htmlContent = `
    <!DOCTYPE html>
    <html>
    <head>
      <base href=".">
      <title>Test Base Href</title>
    </head>
    <body>
      <script src="../../web/viewer.js"></script>
      <div id="viewer" style="width: 100%; height: 100vh;"></div>
      <script>
        const pdf = new PDFDocument({
          data: new Uint8Array(await fetch('test.pdf').then(r => r.arrayBuffer())),
          url: 'test.pdf',
        });
        pdfViewer.setDocument(pdf);
      </script>
    </body>
    </html>
  `;

  const server = await createServer({
    "/test.pdf": fetch(new URL("../../test_files/test.pdf", import.meta.url)).then(r => r.arrayBuffer()),
    "/": htmlContent,
  });

  try {
    const pdf = await PDFDocument.load({
      url: new URL("/", server.url).href,
      fetch: (url) => fetch(new URL(url, server.url).href),
    });

    const page = await pdf.getPage(1);
    const viewport = page.getViewport({ scale: 1 });

    const svg = await page.render({
      viewport,
      renderInteractive: false,
      useSVG: true,
      canvasFactory: new DOMSVGFactory(),
    });

    // Verify the drop shadow is rendered correctly
    const dropShadowFilter = svg.querySelector("[filter]");
    expect(dropShadowFilter).toBeTruthy();
  } finally {
    await server.close();
  }
});