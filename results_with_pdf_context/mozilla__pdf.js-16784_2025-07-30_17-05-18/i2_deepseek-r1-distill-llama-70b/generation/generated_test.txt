it("should correctly handle SVG image resizing after getter change", async () => {
  const { ImageManager } = await import("../../src/display/editor/tools.js");
  const { Util } = await import("../../shared/util.js");

  // Create a test SVG image
  const svgData = `<svg viewBox="0 0 100 100" width="100" height="100" xmlns="http://www.w3.org/2000/svg">
    <rect width="100" height="100" style="fill:red;"/>
  </svg>`;
  const svgUrl = `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(svgData)}`;

  // Create ImageManager instance
  const imageManager = new ImageManager();

  // Get the SVG image
  const image = await imageManager.#get("test-svg", svgUrl);

  // Check if the SVG image was properly handled
  const expectedSvgUrl = new URL(svgUrl);
  const expectedParam = "svgView(preserveAspectRatio(none))";

  // Verify the workaround was applied
  const actualImageUrl = image.bitmap.src;
  const actualUrl = new URL(actualImageUrl);

  // Assert the URL contains the expected parameter
  assert(actualUrl.pathname.includes(expectedParam), "SVG image should include preserveAspectRatio(none)");
});