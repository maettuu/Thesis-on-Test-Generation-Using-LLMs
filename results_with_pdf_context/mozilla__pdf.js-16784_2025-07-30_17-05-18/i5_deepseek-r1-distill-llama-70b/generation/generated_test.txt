it("should correctly resize SVG images", async () => {
  const { ImageManager } = await import("../../src/display/editor/tools.js");
  const svg = `<svg width="100" height="100" viewBox="0 0 100 100"><rect width="100" height="100" fill="red"/></svg>`;

  // Create a test image element
  const image = new Image();
  image.src = `data:image/svg+xml,${encodeURIComponent(svg)}`;

  // Load the image using ImageManager
  const imageManager = new ImageManager();
  const imagePromise = imageManager.get("test", image);

  // Create a canvas to draw the image
  const canvas = document.createElement("canvas");
  const ctx = canvas.getContext("2d");
  canvas.width = 50;
  canvas.height = 50;

  // Draw the image on the canvas after it's loaded
  image.onload = async () => {
    const imageBitmap = await imagePromise;
    ctx.drawImage(imageBitmap, 0, 0, canvas.width, canvas.height);

    // Check if the image was resized correctly by checking the pixel color
    const pixel = ctx.getImageData(0, 0, 1, 1).data;
    const expectedColor = [255, 0, 0, 255]; // Red color

    // Compare the actual pixel color with the expected color
    if (pixel.every((value, index) => value === expectedColor[index])) {
      // Resizing was successful
      console.assert(true);
    } else {
      console.assert(false, "SVG image was not resized correctly");
    }
  };
});