it("should not lag behind the mouse cursor when using free highlighting in PDF", async () => {
  const { PDFDocument, PDFPageProxy } = await import("../../src/display/api.js");
  const { Outliner } = await import("../../src/display/editor/outliner.js");
  const { PDFDataRangeTransport } = await import("../../src/display/api.js");

  const pdfDoc = await PDFDocument.load(await PDFDataRangeTransport.fetch({
    url: `${TEST_PDFS_PATH}/highlighting.pdf`,
    range: { start: 0, size: 1024 * 1024 },
  }));
  const pdfPage = pdfDoc.getPage(0);
  const outliner = new Outliner();

  const lastX = 100;
  const lastY = 100;
  outliner.add({ x: lastX, y: lastY });

  const lastCoords = outliner.#getLastCoords();
  const expectedLastCoords = [(lastX + (outliner.#last.subarray(4, 6)[0] - outliner.#last.subarray(16, 18)[0]) / 2) / pdfPage.getViewport({ scale: 1 }).width, 
                               (lastY + (outliner.#last.subarray(4, 6)[1] - outliner.#last.subarray(16, 18)[1]) / 2) / pdfPage.getViewport({ scale: 1 }).height, 
                               (lastX + (outliner.#last.subarray(16, 18)[0] - outliner.#last.subarray(4, 6)[0]) / 2) / pdfPage.getViewport({ scale: 1 }).width, 
                               (lastY + (outliner.#last.subarray(16, 18)[1] - outliner.#last.subarray(4, 6)[1]) / 2) / pdfPage.getViewport({ scale: 1 }).height];

  expect(lastCoords).toEqual(expectedLastCoords);
});