it("should resize SVG images without preserving aspect ratio", async () => {
  const { ImageManager } = await import("../../src/display/editor/tools.js");
  const { Util } = await import("../../shared/util.js");

  // Create a test SVG image
  const svg = `data:image/svg+xml;charset=UTF-8,<svg viewBox="0 0 1 1" width="1" height="1" xmlns="http://www.w3.org/2000/svg"><rect width="1" height="1" style="fill:red;"/></svg>`;
  const image = new Image();
  image.src = svg;
  await image.decode();

  // Create a canvas to test resizing
  const canvas = new OffscreenCanvas(1, 3);
  const ctx = canvas.getContext("2d");

  // Draw the image on canvas
  ctx.drawImage(image, 0, 0, 1, 1, 0, 0, 1, 3);

  // Check if the image fills the canvas without preserving aspect ratio
  const pixels = ctx.getImageData(0, 0, 1, 3).data;
  const expectedColor = 0xFF0000; // Red color

  // Verify top and bottom pixels to ensure proper resizing
  const topPixel = new Uint32Array(pixels.buffer)[0];
  const bottomPixel = new Uint32Array(pixels.buffer)[pixels.length / 4 - 1];

  expect(topPixel).toBe(expectedColor);
  expect(bottomPixel).toBe(expectedColor);
});