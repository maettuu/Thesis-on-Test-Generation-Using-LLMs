it("should correctly resize SVG images when aspect ratio is not preserved", async () => {
  const { ImageManager, shadow } = await import("../../src/display/editor/tools.js");
  const svg = `data:image/svg+xml;charset=UTF-8,<svg viewBox="0 0 1 1" width="1" height="1" xmlns="http://www.w3.org/2000/svg"><rect width="1" height="1" style="fill:red;"/></svg>`;
  const canvas = new OffscreenCanvas(1, 3);
  const ctx = canvas.getContext("2d");
  const image = new Image();
  image.src = svg;

  // Create ImageManager instance
  const imageManager = new ImageManager();

  // Check if aspect ratio needs to be removed
  const mustRemoveAspectRatio = await ImageManager._checkIfSVGFitsInCanvas();

  // Generate the final SVG URL
  const finalSvgUrl = mustRemoveAspectRatio 
    ? `${svg}#svgView(preserveAspectRatio(none))` 
    : svg;

  // Load the image using ImageManager
  const imageData = await imageManager.getFromUrl(finalSvgUrl);

  // Draw the image on the canvas
  ctx.drawImage(image, 0, 0, 1, 1, 0, 0, 1, 3);

  // Check the pixel color after resizing
  const pixels = ctx.getImageData(0, 0, 1, 1).data;
  const pixelColor = `rgb(${pixels[0]}, ${pixels[1]}, ${pixels[2]})`;

  // The expected color should be red (rgb(255, 0, 0))
  expect(pixelColor).toBe("rgb(255, 0, 0)");
});