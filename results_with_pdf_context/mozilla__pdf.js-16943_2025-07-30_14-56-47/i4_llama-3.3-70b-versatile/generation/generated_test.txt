it("should change the style of the line and the resizers around a selected editor", async () => {
  const { AnnotationEditor } = await import("./editor.js");
  const { FreeTextEditor } = await import("./freetext.js");
  const { InkEditor } = await import("./ink.js");

  const editor = new AnnotationEditor({ id: 1, parent: null, uiManager: null });
  const freeTextEditor = new FreeTextEditor({ id: 2, parent: null, uiManager: null });
  const inkEditor = new InkEditor({ id: 3, parent: null, uiManager: null });

  editor.select();
  freeTextEditor.select();
  inkEditor.select();

  const expectedStyle = "selectedEditor";
  const actualStyleEditor = editor.div?.classList.contains(expectedStyle);
  const actualStyleFreeTextEditor = freeTextEditor.div?.classList.contains(expectedStyle);
  const actualStyleInkEditor = inkEditor.div?.classList.contains(expectedStyle);

  expect(actualStyleEditor).toBe(true);
  expect(actualStyleFreeTextEditor).toBe(true);
  expect(actualStyleInkEditor).toBe(true);
});