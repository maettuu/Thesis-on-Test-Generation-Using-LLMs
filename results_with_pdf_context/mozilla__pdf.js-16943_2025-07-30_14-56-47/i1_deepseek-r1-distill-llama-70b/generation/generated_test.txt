it("should adjust editor position based on border line width", async () => {
  const { AnnotationEditor } = await import("../../src/display/editor/editor.js");
  const { FreeTextEditor } = await import("../../src/display/editor/freetext.js");

  // Initialize the editor with a specific border line width
  AnnotationEditor._borderLineWidth = 2;

  // Create a new editor instance with specific dimensions and position
  const editor = new FreeTextEditor({
    parent: {
      viewport: {
        rawDims: {
          pageWidth: 100,
          pageHeight: 100,
        }
      }
    },
    x: 10,
    y: 20,
    uiManager: new CommandManager(),
  });

  // Set up the expected position after adjustment
  const expectedLeft = 10 + (2 / 100);
  const expectedTop = 20 + (2 / 100);

  // Apply the position fix
  editor.fixAndSetPosition();

  // Verify the position is correctly adjusted
  assert.strictEqual(editor.div.style.left, `${(expectedLeft * 100).toFixed(2)}%`);
  assert.strictEqual(editor.div.style.top, `${(expectedTop * 100).toFixed(2)}%`);
});