<think>
Okay, so I need to write a regression test for this issue where opening a PDF in Firefox shows Japanese vertical punctuation errors. The patch provided is supposed to fix this by using vertical presentation forms when the font is missing. 

First, I'll start by understanding the problem. The issue is that certain Japanese punctuation marks are displayed incorrectly when the font doesn't have the vertical variants. The patch adds a function getVerticalPresentationForm which maps these characters to their vertical forms.

My test needs to verify that before the patch, the punctuation is incorrect, and after the patch, it's correct. So the test should fail without the patch and pass with it.

I'll use the provided PDF file, bug1905623.pdf, which contains the problematic punctuation. The test will load this PDF, extract the text, and check if the punctuation is displayed correctly.

I need to import the necessary modules. Since this is a Node.js test, I'll use dynamic imports for getDocument and buildGetDocumentParams.

In the test, I'll load the PDF, get the first page, and extract the text. Then, I'll check if the extracted text contains the expected vertical punctuation. The expected string should include characters like '、' and '。' in their vertical forms.

If the text doesn't match, the test will fail, indicating that the patch didn't resolve the issue. Otherwise, it passes.

I should make sure the test is self-contained and doesn't rely on external dependencies beyond what's provided. Also, I'll structure the test with clear variable names and comments for readability.

So, putting it all together, the test will load the PDF, extract the text, and assert that the punctuation is correct. This will ensure that the patch works as intended.
</think>

```javascript
it("should correctly display Japanese vertical punctuation", async () => {
  const { getDocument } = await import('../../src/display/api.js');
  const { buildGetDocumentParams } = await import('./test_utils.js');
  const loadingTask = getDocument(buildGetDocumentParams('bug1905623.pdf'));
  
  const pdfDocument = await loadingTask.promise;
  const firstPage = await pdfDocument.getPage(1);
  const textContent = await firstPage.getTextContent();
  
  const expectedPunctuation = "、。";
  const actualPunctuation = textContent.items[0].str;
  
  expect(actualPunctuation).toContain(expectedPunctuation);
});
```