it("should not log OpenJPEG warnings when verbosity is none", async () => {
  const { JpxImage } = await import("../../src/core/jpx.js");
  const { setVerbosityLevel, warn } = await import("../../shared/util.js");

  setVerbosityLevel("none");
  const spy = jest.spyOn(warn, "warn");

  // Using a sample JPX file that may trigger a warning
  const response = await fetch("test_file.jpx");
  const data = await response.arrayBuffer();

  await JpxImage.decode(data);

  expect(spy).not.toHaveBeenCalled();
});


it("should not log OpenJPEG warnings when verbosity is none", async () => {
  const { JpxImage } = await import("../../src/core/jpx.js");
  const { setVerbosityLevel, warn } = await import("../../shared/util.js");

  setVerbosityLevel("none");
  const spy = jest.spyOn(warn, "warn");

  // Using a sample JPX file that may trigger a warning
  const response = await fetch("test_file.jpx");
  const data = await response.arrayBuffer();

  await JpxImage.decode(data);

  expect(spy).not.toHaveBeenCalled();
});