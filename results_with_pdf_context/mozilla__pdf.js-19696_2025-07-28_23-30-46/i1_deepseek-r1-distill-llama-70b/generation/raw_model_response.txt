<think>
Okay, I need to create a regression test for the issue where the £ symbol isn't displaying correctly in PDF.js. The user provided a patch that adds a specific mapping in the standard_fonts.js file. My task is to write a test that fails before the patch and passes after.

First, I should understand the problem. The £ symbol (U+00A3) is showing up as ά (U+03AC) because of an incorrect glyph mapping. The patch adds t[940] = 163; in the getSupplementalGlyphMapForCalibri function. This should fix the mapping.

Now, I need to write a test that checks if the £ symbol is rendered correctly. I'll use the provided PDF file, issue19695.pdf, which contains the problematic symbol.

I'll start by importing the necessary modules. Since the test file already has some imports, I can use them. I'll need getDocument from api.js and buildGetDocumentParams from test_utils.js.

Next, I'll set up the test. I'll use PDFDocumentLoadingTask to load the PDF and get the first page. Then, I'll create a PageViewport to render it.

The key part is extracting the text from the page. I'll use page.getTextContent(), which should include the £ symbol. I'll check if the text includes the correct Unicode character for £, which is '\u00A3'.

I need to make sure that before the patch, this test would fail because the symbol isn't correctly mapped, so the text wouldn't include £. After the patch, the mapping is correct, and the test should pass.

I should also handle any potential errors, maybe with a try-catch block, but the example provided doesn't include that, so I'll keep it simple for now.

Putting it all together, I'll write an async test function that loads the PDF, gets the page, renders it, extracts the text, and checks for the £ symbol. If it's present, the test passes; otherwise, it fails.

I need to make sure the test is self-contained and only uses the provided imports without adding new dependencies. Also, the test should be concise and focused on verifying the specific bug fix.
</think>

```javascript
it("should correctly display £ symbol (U+00A3) in PDFs", async () => {
  const { getDocument } = await import("../../src/display/api.js");
  const { buildGetDocumentParams } = await import("./test_utils.js");
  const loadingTask = getDocument(buildGetDocumentParams('issue19695.pdf'));
  const pdf = await loadingTask.promise;
  const page = await pdf.getPage(1);
  const viewport = new page.PageViewport({ scale: 1 });

  const textContent = await page.getTextContent({ viewport });
  const expectedChar = '\u00A3'; // £ symbol
  
  expect(textContent.items.some(item => item.str.includes(expectedChar))).toBe(true);
});
```