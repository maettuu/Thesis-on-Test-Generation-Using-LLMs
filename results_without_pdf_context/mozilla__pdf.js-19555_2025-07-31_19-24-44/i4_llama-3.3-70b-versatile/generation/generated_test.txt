it("should decrypt PDFs with RC encryption where R key length bits", async () => {
  const { CipherTransformFactory } = await import("../../src/core/crypto.js");
  const { PDFDocument } = await import("../../src/core/document.js");
  const { stringToBytes } = await import("../../src/shared/util.js");

  const pdfData = new Uint8Array([
    // binary data of the PDF file
  ]);

  const pdfDoc = await PDFDocument.load(pdfData, { cMapUrl: "path/to/cmap", cMapPacked: true });
  const encryptionKey = stringToBytes("password");
  const dict = pdfDoc.getMetadata().get("encryption");
  const cipherTransformFactory = new CipherTransformFactory(dict, pdfData, encryptionKey);

  const expected = true;
  const actual = cipherTransformFactory.encryptionKey.length === 16;

  expect(actual).toBe(expected);
});