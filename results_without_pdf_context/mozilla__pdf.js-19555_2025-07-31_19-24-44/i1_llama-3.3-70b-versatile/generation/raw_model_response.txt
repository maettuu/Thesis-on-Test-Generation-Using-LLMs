```javascript
it("should support rare RC4 encryption where R=4, key length < 128 bits", async () => {
  const { CipherTransformFactory, Dict, Name, stringToBytes } = await import("../../src/core/crypto.js");
  const { PasswordException, PasswordResponses } = await import("../../src/shared/util.js");

  const dict = new Dict();
  dict.set("Filter", Name.get("Standard"));
  dict.set("V", 4);
  dict.set("R", 4);
  dict.set("Length", 40);
  dict.set("O", "owner");
  dict.set("U", "user");
  dict.set("P", 0);
  dict.set("CF", new Dict());

  try {
    const factory = new CipherTransformFactory(dict, "", "");
    expect(factory.encryptionKey.length).toBe(16);
  } catch (error) {
    if (error instanceof PasswordException) {
      throw new Error("Password exception was thrown");
    } else {
      throw error;
    }
  }
});
```