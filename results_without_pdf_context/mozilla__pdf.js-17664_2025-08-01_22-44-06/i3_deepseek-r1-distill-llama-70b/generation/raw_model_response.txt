<think>
Okay, I need to create a regression test for the issue where the free highlighting in PDFs lags behind the mouse cursor. The patch provided modifies the outliner.js file, so the test should check if the highlighting performance has improved after applying the patch.

First, I should look at the existing test file to see what's available. The test file imports several modules, but I might need to import the Outliner class from the display/editor/outliner.js. Since the test is in Node.js, I'll use dynamic imports.

I'll set up a test case where I simulate adding multiple points to the outliner and then check the generated outlines. The goal is to ensure that the outlines are correctly computed without lagging.

I'll create a mock set of points that simulate the mouse movement. Then, I'll instantiate the Outliner and add each point, checking if each addition is successful. After adding all points, I'll get the outlines and verify they're not empty.

The test should fail before the patch because the lag causes incorrect outlines, and pass after the patch because the issue is resolved. So, the test will assert that the outlines are generated as expected.

I'll structure the test with async/await, using the imported modules and the dynamic import for Outliner. I'll initialize the box and points, create the outliner instance, add each point, and finally check the outlines.

The key is to ensure the test is self-contained and directly tests the highlighting lag issue by verifying the outlines are correctly computed after the patch.
</think>

```javascript
it("should fix free highlighting lag behind mouse cursor", async () => {
  const { Outliner } = await import("../../src/display/editor/outliner.js");
  const box = { x: 0, y: 0, width: 100, height: 100 };
  const points = [
    { x: 10, y: 10 }, { x: 20, y: 20 }, { x: 30, y: 30 }, { x: 40, y: 40 },
    { x: 50, y: 50 }, { x: 60, y: 60 }, { x: 70, y: 70 }, { x: 80, y: 80 }
  ];
  
  const outliner = new Outliner(points, 0, 0, true);
  
  for (const point of points) {
    const result = outliner.add(point);
    if (!result) {
      throw new Error("Failed to add point");
    }
  }
  
  const outlines = outliner.getOutlines();
  if (!outlines || outlines.length === 0) {
    throw new Error("No outlines generated");
  }
});
```