```javascript
it("should translate font correctly when fontFile is a Dict", async () => {
  const xref = new XRefMock();
  const idFactory = createIdFactory();
  const fontDict = new Dict();
  fontDict.set("Subtype", Name.get("Type1"));
  fontDict.set("BaseFont", Name.get("Helvetica"));
  fontDict.set("FontDescriptor", new Dict());
  fontDict.set("FirstChar", 0);
  fontDict.set("LastChar", 255);
  fontDict.set("Widths", [1000]);
  const fontFile = new Dict();
  fontFile.set("Subtype", Name.get("Type1C"));
  fontFile.set("Length1", 1000);
  fontDict.set("FontFile", fontFile);
  xref.fetch = (ref) => fontDict;
  const evaluator = new PartialEvaluator({
    xref,
    handler: {},
    pageIndex: 0,
    idFactory,
    fontCache: new Map(),
    builtInCMapCache: new Map(),
    standardFontDataCache: new Map(),
    globalImageCache: new Map(),
    systemFontCache: new Map(),
  });
  const translatedFont = await evaluator.loadFont("Helvetica", null, new Dict());
  expect(translatedFont.font).toBeInstanceOf(Object);
});
```