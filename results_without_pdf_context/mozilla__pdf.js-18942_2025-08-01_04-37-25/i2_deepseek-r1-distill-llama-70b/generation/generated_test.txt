it("should handle nonstream font files by falling back to standard fonts", async () => {
  const { PDFDocument, PDFPage } = await import("../../src/display/api.js");
  const originalConsoleError = console.error;
  const error = await new Promise(resolve => {
    const mockConsoleError = (message) => {
      if (message.includes("loadFont - translateFont failed")) {
        resolve(new Error(message));
      }
    };
    console.error = mockConsoleError;
    fetchMock.doMock("https://example.com/21_10_2024_FAMI.INVERSION.SAS_901060703_inicial.pdf", {
      body: new ArrayBuffer(1024),
      headers: {
        "content-type": "application/pdf"
      }
    });
    const pdf = new PDFDocument({
      data: new Uint8Array(new ArrayBuffer(1024)),
      fingerprint: "test-pdf"
    });
    pdf.getPage(1).then(page => {
      page.render({
        canvasContext: {getContext: () => ({})},
        viewport: page.getViewport({scale: 1})
      });
    });
  });
  expect(error).toBeUndefined();
});