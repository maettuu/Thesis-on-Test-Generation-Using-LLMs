it("should handle streams sequence with filtering", async () => {
  const { StreamsSequenceStream, BaseStream } = await import("../../src/core/decode_stream.js");
  const testStream = new Stream(new Uint8Array([1, 2, 3, 4]));

  // Create a mix of valid and invalid streams
  const streams = [
    testStream,
    new Stream(new Uint8Array([5, 6, 7, 8])), // valid
    {}, // invalid, not a BaseStream
    new BaseStream() // valid
  ];

  const streamSequence = new StreamsSequenceStream(streams);
  const result = await streamSequence.getBytes();

  // Expected data from the valid streams (testStream and the second Stream)
  const expected = new Uint8Array([1, 2, 3, 4, 5, 6, 7, 8]);
  expect(result).toEqual(expected);
});