```javascript
it("should filter out non-BaseStream instances in StreamsSequenceStream", async () => {
  const { BaseStream } = await import("../../src/core/base_stream.js");
  const { StreamsSequenceStream } = await import("../../src/core/decode_stream.js");

  class MockStream extends BaseStream {
    constructor(length) {
      super();
      this.length = length;
    }
  }

  const validStream1 = new MockStream(10);
  const validStream2 = new MockStream(20);
  const invalidStream = { length: 30 };

  const streams = [validStream1, invalidStream, validStream2];
  const sequenceStream = new StreamsSequenceStream(streams);

  const expectedLength = validStream1.length + validStream2.length;
  const actualLength = sequenceStream.streams.reduce((sum, stream) => sum + stream.length, 0);

  expect(actualLength).toBe(expectedLength);
});
```