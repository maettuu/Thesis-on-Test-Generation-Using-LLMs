it("should properly handle streams sequence with invalid streams", async () => {
  const { DecodeStream, StreamsSequenceStream } = await import("../../src/core/decode_stream.js");
  const { Stream } = await import("../../src/core/stream.js");

  // Create a test stream
  const stringStream = new Stream(new Uint8Array([0x41, 0x42, 0x43]));

  // Create a StreamsSequenceStream with a mix of valid and invalid streams
  const streams = [stringStream, {}]; // {} is an invalid stream
  const streamSequence = new StreamsSequenceStream(streams);

  // Attempt to read the stream
  let errorOccurred = false;
  try {
    await streamSequence.readBlock();
  } catch (e) {
    errorOccurred = true;
  }

  // After the patch, the invalid stream should be filtered out and no error should occur
  expect(errorOccurred).toBe(false);
});