it("should save annotations on linearized PDFs", async () => {
  const { incrementalUpdate } = await import("../../src/core/writer.js");
  const { Dict, Name, Ref } = await import("../../src/core/primitives.js");
  const { StringStream } = await import("../../src/core/stream.js");
  const { bytesToString } = await import("../../src/shared/util.js");

  // Create a sample XRef with linearization
  const xref = {
    trailer: new Dict(),
    lastXRefStreamPos: 100,
    startXRefQueue: [101],
    _xrefStms: new Set([101]),
  };

  // Set up the data for incremental update
  const originalData = new Uint8Array([0x25, 0x50, 0x44, 0x46]);
  const newRefs = [];
  const acroFormRef = Ref.get(1, 0);
  const acroForm = new Dict();
  const xrefInfo = {
    rootRef: Ref.get(2, 0),
    encryptRef: null,
    newRef: Ref.get(3, 0),
    infoRef: null,
    info: {},
    fileIds: null,
    startXRef: 100,
    filename: "test.pdf",
  };

  // Perform the incremental update
  const result = await incrementalUpdate({
    originalData,
    xrefInfo,
    newRefs,
    xref,
    hasXfa: false,
    xfaDatasetsRef: null,
    hasXfaDatasetsEntry: false,
    needAppearances: true,
    acroFormRef,
    acroForm,
    xfaData: null,
  });

  // Convert the result to a string for inspection
  const resultStr = bytesToString(result);

  // Verify that the annotation data is present
  expect(resultStr).toContain("annotation");
});