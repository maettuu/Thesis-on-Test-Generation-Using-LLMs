```javascript
it("should render inlined images without the closing EI", async () => {
  const { PartialEvaluator, OperatorList, Stream, Dict, Name } = await import("../../src/core/evaluator.js");
  const { XRefMock } = await import("./test_utils.js");
  const xref = new XRefMock();
  const operatorList = new OperatorList();
  const evaluator = new PartialEvaluator({
    xref,
    handler: {},
    pageIndex: 0,
    idFactory: {},
    fontCache: {},
    builtInCMapCache: {},
    standardFontDataCache: {},
    globalImageCache: {},
    systemFontCache: {},
    options: {},
  });
  const imageStream = new Stream(new Uint8Array([0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x63, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00]));
  const imageDict = new Dict({
    W: new Name("Width"),
    H: new Name("Height"),
  });
  imageDict.set("Width", 10);
  imageDict.set("Height", 10);
  await evaluator.buildPaintImageXObject({
    resources: {},
    image: imageStream,
    isInline: true,
    operatorList,
    cacheKey: null,
    localImageCache: {},
    localColorSpaceCache: {},
  });
  const expectedOps = [
    {
      fn: "paintInlineImageXObject",
      args: [expect.any(Object)],
      optionalContent: undefined,
    },
  ];
  expect(operatorList.ops).toEqual(expectedOps);
});
```