it("should handle inline images without closing EI", async () => {
  const { PartialEvaluator, OperatorList, Dict, Name, Stream } = await import("../../src/core/evaluator.js");
  const { StringStream } = await import("../../src/core/stream.js");

  const xref = new XRefMock();
  const options = {
    ignoreErrors: false,
    isOffscreenCanvasSupported: false,
  };

  const evaluator = new PartialEvaluator({
    xref,
    handler: null,
    pageIndex: 0,
    idFactory: createIdFactory(),
    fontCache: null,
    builtInCMapCache: null,
    standardFontDataCache: null,
    globalImageCache: null,
    systemFontCache: null,
    options,
  });

  const operatorList = new OperatorList();
  const resources = new Dict();
  const imageStream = new StringStream("q 0 0 10 10 rect f*");

  await expect(
    evaluator.buildPaintImageXObject({
      resources,
      image: imageStream,
      isInline: true,
      operatorList,
      cacheKey: null,
      localImageCache: null,
      localColorSpaceCache: null,
    })
  ).resolves.not.toThrow();
});