it("should render readonly form fields when AnnotationMode is ENABLED", async () => {
  const { PDFDocumentProxy } = await import("../../src/display/api.js");
  const { PDFDataRangeTransport } = await import("../../src/display/api.js");
  const pdfUrl = `${TEST_PDFS_PATH}simple-form-readonly.pdf`;
  const params = buildGetDocumentParams(pdfUrl, null, null, DefaultFileReaderFactory);
  const pdfDocument = await PDFDocumentProxy.load(params);
  const pdfPage = await pdfDocument.getPage(1);
  const viewport = new PageViewport({ width: 100 });
  const annotationLayer = new (await import("../../src/display/annotation_layer.js")).AnnotationLayer({
    div: document.createElement("div"),
    page: pdfPage,
    viewport: viewport,
    linkService: null,
    downloadManager: null,
    imageResourcesPath: "",
    renderForms: false,
    annotationStorage: null,
    enableScripting: false,
    hasJSActions: false,
    fieldObjects: null,
  });
  const annotations = await pdfPage.getAnnotations();
  await annotationLayer.render({ annotations, viewport, page: pdfPage, linkService: null, downloadManager: null, renderForms: false });
  const textWidgetAnnotations = annotationLayer.div.querySelectorAll(".textWidgetAnnotation");
  expect(textWidgetAnnotations.length).toBe(1);
  const textWidgetAnnotation = textWidgetAnnotations[0];
  expect(textWidgetAnnotation.hidden).toBe(false);
});