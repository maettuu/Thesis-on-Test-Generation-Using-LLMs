it("should render readonly text fields when AnnotationMode is ENABLED", async () => {
  const { PDFDocument, PDFPageProxy } = await import("../../src/core/document.js");
  const { AnnotationLayer } = await import("../../src/display/annotation_layer.js");
  const { getDocument } = await import("../../src/display/api.js");
  const { assert } = await import("../../src/shared/util.js");

  // Initialize the PDF document and page
  const pdf = await getDocument({
    url: "../../src/core/test_files/simple-form-readonly.pdf",
  });
  const page = await pdf.getPage(1);

  // Set up the annotation layer with AnnotationMode = ENABLED (1)
  const viewport = page.getViewPort({ scale: 1 });
  const div = document.createElement("div");
  const annotationLayer = new AnnotationLayer({
    div,
    page,
    viewport,
    renderForms: true,
    annotationStorage: new (await import("../../src/shared/util.js")).AnnotationStorage,
  });

  // Render the annotations
  await annotationLayer.render({
    annotations: await page.getAnnotations({}),
    viewport,
    renderForms: true,
  });

  // Check if the read-only text field is rendered
  const textWidget = div.querySelector(".textWidgetAnnotation");
  assert.ok(textWidget, "Read-only text field is rendered");

  // Cleanup
  pdf.destroy();
});