it("should render readonly form field when AnnotationMode is ENABLED", async () => {
  const { AnnotationLayer } = await import("../../src/display/annotation_layer.js");
  const { getDocument } = await import("../../src/display/api.js");
  const { AnnotationMode } = await import("../../src/shared/util.js");

  const pdfUrl = "path/to/simple-form-readonly.pdf";
  const loadingTask = getDocument({ url: pdfUrl });
  const pdfDocument = await loadingTask.promise;
  const page = await pdfDocument.getPage(1);

  const annotationLayer = new AnnotationLayer({
    div: document.createElement("div"),
    page,
    viewport: page.getViewport({ scale: 1 }),
  });

  const annotations = await page.getAnnotations({ intent: "display" });
  await annotationLayer.render({
    annotations,
    viewport: page.getViewport({ scale: 1 }),
    linkService: {},
    downloadManager: {},
    renderForms: false,
    annotationMode: AnnotationMode.ENABLED,
  });

  const textWidget = annotationLayer.div.querySelector(".textWidgetAnnotation");
  const isRenderable = textWidget && !textWidget.hidden;

  expect(isRenderable).toBe(true);
});