it("should render readonly form field when AnnotationMode is ENABLED", async () => {
  const { getDocument } = await import("../../src/display/api.js");
  const { PDFWorker } = await import("../../src/display/worker.js");
  const { TEST_PDFS_PATH } = await import("./test_utils.js");

  const pdfPath = `${TEST_PDFS_PATH}simple-form-readonly.pdf`;
  const pdfDoc = await getDocument({
    url: pdfPath,
    worker: new PDFWorker(),
    annotationMode: AnnotationMode.ENABLED,
  });

  const page = await pdfDoc.getPage(1);
  const viewport = page.getViewport({ scale: 1 });
  const renderTask = page.render({
    viewport,
    annotationMode: AnnotationMode.ENABLED,
  });

  let textElementRendered = false;

  function checkTextElement() {
    const textWidget = document.querySelector('.textWidgetAnnotation');
    if (textWidget && textWidget.textContent === "Foo") {
      textElementRendered = true;
    }
  }

  // Give the rendering a chance to complete
  await new Promise(resolve => {
    const interval = setInterval(() => {
      checkTextElement();
      if (textElementRendered) {
        clearInterval(interval);
        resolve();
      }
    }, 100);
  });

  assert.ok(textElementRendered, "Read-only form field is rendered correctly");
});