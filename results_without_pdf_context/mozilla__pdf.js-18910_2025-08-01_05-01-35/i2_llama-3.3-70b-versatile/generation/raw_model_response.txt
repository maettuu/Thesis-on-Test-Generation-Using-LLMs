```javascript
it("should use ImageDecoder to speed up decoding images in PDFs", async () => {
  const { PDFDocument } = await import("../../src/display/api.js");
  const { JpegStream } = await import("../../src/core/jpeg_stream.js");
  const pdf = await PDFDocument.load(await fetch("path_to_test_pdf.pdf").then((res) => res.arrayBuffer()));
  const page = await pdf.getPage(1);
  const operatorList = await page.getOperatorList();
  const image = operatorList.getImages()[0];
  const jpegStream = new JpegStream(image.stream, null, {});
  const canUseImageDecoderBefore = await JpegStream.canUseImageDecoder;
  const getTransferableImageBefore = await jpegStream.getTransferableImage();
  const pdfDocumentWithPatch = await PDFDocument.load(await fetch("path_to_test_pdf.pdf").then((res) => res.arrayBuffer()));
  const pageWithPatch = await pdfDocumentWithPatch.getPage(1);
  const operatorListWithPatch = await pageWithPatch.getOperatorList();
  const imageWithPatch = operatorListWithPatch.getImages()[0];
  const jpegStreamWithPatch = new JpegStream(imageWithPatch.stream, null, {});
  const canUseImageDecoderAfter = await JpegStream.canUseImageDecoder;
  const getTransferableImageAfter = await jpegStreamWithPatch.getTransferableImage();
  expect(canUseImageDecoderBefore).toBe(false);
  expect(getTransferableImageBefore).toBeNull();
  expect(canUseImageDecoderAfter).toBe(true);
  expect(getTransferableImageAfter).not.toBeNull();
});
```