```javascript
it("should speed up decoding images in PDFs using ImageDecoder", async () => {
  const { PDFImage } = await import("../../src/core/image.js");
  const { JpegStream } = await import("../../src/core/jpeg_stream.js");
  const { ImageDecoder } = globalThis;

  const image = new PDFImage({
    xref: {},
    res: {},
    image: new JpegStream({}, null, {}),
    isInline: false,
    pdfFunctionFactory: {},
    localColorSpaceCache: {},
  });

  const originalWidth = 100;
  const originalHeight = 100;
  const drawWidth = originalWidth;
  const drawHeight = originalHeight;

  const getImageData = async () => {
    const imageData = await image.createImageData(false, true);
    return imageData;
  };

  const startTime = performance.now();
  await getImageData();
  const endTime = performance.now();
  const timeTakenWithoutPatch = endTime - startTime;

  const patchAppliedImageData = await image.#getImage(originalWidth, originalHeight);
  const startTimeWithPatch = performance.now();
  await image.createImageData(false, true);
  const endTimeWithPatch = performance.now();
  const timeTakenWithPatch = endTimeWithPatch - startTimeWithPatch;

  expect(timeTakenWithPatch).toBeLessThan(timeTakenWithoutPatch);
});
```