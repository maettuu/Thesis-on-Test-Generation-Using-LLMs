it("should use ImageDecoder for faster image decoding", async () => {
  const { JpegStream } = await import("../../src/core/jpeg_stream.js");
  const { JpegImage } = await import("../../src/core/jpg.js");

  // Create a sample JPEG stream with data that can be decoded with ImageDecoder
  const jpegData = new Uint8Array([0xff, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);
  const stream = new JpegStream({
    stream: { getBytes: () => Promise.resolve(jpegData) },
    params: {}
  });

  // Check if ImageDecoder is supported
  const canUseImageDecoder = await JpegStream.canUseImageDecoder;

  // Verify the expected behavior based on ImageDecoder support
  const bitmap = await stream.getTransferableImage();

  if (canUseImageDecoder) {
    expect(bitmap).toBeTruthy();
  } else {
    expect(bitmap).toBeNull();
  }
});