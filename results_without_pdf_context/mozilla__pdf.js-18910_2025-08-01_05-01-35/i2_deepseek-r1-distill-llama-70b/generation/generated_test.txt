it("should use ImageDecoder for jpeg images", async () => {
  const { PDFDocument } = await import("../../src/display/api.js");
  const { JpegImage } = await import("../../src/core/jpg.js");
  const { ImageDecoder } = globalThis;

  // Create a test image
  const jpegData = new Uint8Array([
    0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xE0, 0x00, 0x14, 0x4A, 0x46, 0x49, 0x46, 0x50, 0x54,
    0x52, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xFF, 0xDA, 0x00, 0x0C, 0x01, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00
  ]);

  // Load the image
  const image = await JpegImage.parse(jpegData);

  // Check if ImageDecoder is supported and image uses it
  const canUseImageDecoder = await JpegStream.canUseImageDecoder;
  if (!canUseImageDecoder) {
    throw new Error("ImageDecoder is not supported");
  }

  const transferableImage = await image.getTransferableImage();
  expect(transferableImage).not.toBeNull();

  // Verify the image was decoded using ImageDecoder
  expect(transferableImage.bitmap).toBeDefined();
});