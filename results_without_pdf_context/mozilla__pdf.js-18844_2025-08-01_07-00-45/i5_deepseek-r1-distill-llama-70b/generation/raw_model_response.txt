<think>
Alright, I need to write a regression test for the issue where the text layer and canvas don't always match in the PDF viewer on Windows. The patch provided modifies the TextLayer class to adjust font families based on the platform and browser, specifically for Windows and Firefox. 

First, I should understand what the patch does. It adds a static method fontFamilyMap which uses FeatureTest.platform to check if the environment is Windows and Firefox. Then, it modifies the fontFamily variable by getting the appropriate font from this map. This should fix the mismatch between the text layer and canvas.

To test this, I'll create a test that checks if the fontFamily is correctly adjusted on Windows and Firefox. I'll need to mock the platform and browser detection to simulate the environment. 

I'll start by importing the necessary modules: TextLayer from display/text_layer.js and FeatureTest from shared/util.js. Then, I'll set up a mock for FeatureTest.platform to return isWindows and isFirefox as true. 

Next, I'll create a sample text layer, perhaps using a simple PDF like "hello.pdf". I'll render the text and check the font family used. The expected font family should include "Calibri" for sans-serif and "Lucida Console" for monospace on Windows and Firefox.

I'll write two tests: one for sans-serif and another for monospace. Each will check if the respective font is prepended correctly. This ensures that the patch works as intended and the text layer matches the canvas rendering.

Finally, I'll structure the test using Jest syntax, making sure it's self-contained and only uses the provided imports. The test should fail before the patch and pass after, confirming the fix.
</think>

```javascript
it("should adjust font family for Windows + Firefox", async () => {
  const { TextLayer } = await import("../../src/display/text_layer.js");
  const { FeatureTest } = await import("../../shared/util.js");

  // Mock platform and browser detection
  const originalPlatform = FeatureTest.platform;
  FeatureTest.platform = () => ({
    isWindows: true,
    isFirefox: true,
  });

  // Test sans-serif font family
  {
    const textLayer = new TextLayer();
    const fontFamily = "sans-serif";
    const expectedFontFamily = "Calibri, sans-serif";
    const actualFontFamily = TextLayer.fontFamilyMap.get(fontFamily) || fontFamily;
    expect(actualFontFamily).toBe(expectedFontFamily);
  }

  // Test monospace font family
  {
    const textLayer = new TextLayer();
    const fontFamily = "monospace";
    const expectedFontFamily = "Lucida Console, monospace";
    const actualFontFamily = TextLayer.fontFamilyMap.get(fontFamily) || fontFamily;
    expect(actualFontFamily).toBe(expectedFontFamily);
  }

  // Restore original platform detection
  FeatureTest.platform = originalPlatform;
});
```