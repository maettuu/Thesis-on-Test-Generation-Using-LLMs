import { ToUnicodeMap } from "../../src/core/to_unicode_map.js";
import { stringToUTF16String } from "../../src/core/core_utils.js";

describe("ToUnicodeMap", () => {
  it("should correctly map Extension B characters", async () => {
    const cmap = [];
    cmap[0x10000] = "\uD800\uDC00"; // Example Extension B character
    const toUnicodeMap = new ToUnicodeMap(cmap);
    const expectedCharCode = 0x10000;
    const expectedUnicode = "\uD800\uDC00";
    let actualCharCode;
    toUnicodeMap.forEach((charCode, unicode) => {
      if (unicode === expectedUnicode) {
        actualCharCode = charCode;
      }
    });
    expect(actualCharCode).toBe(expectedCharCode.toString());
  });
});