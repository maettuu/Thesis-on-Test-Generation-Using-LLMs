import { ToUnicodeMap } from "../../src/core/to_unicode_map.js";
import { unreachable } from "../../src/shared/util.js";

describe("ToUnicodeMap Extension B Character Rendering", () => {
  it("should correctly map Extension B characters", async () => {
    // Create a test cmap with Extension B characters
    const cmap = {
      "0": "𝄞", // U+1D11E - MUSICAL SYMBOL G CLEF
      "1": "𝅘𝅥", // U+1D11F - MUSICAL SYMBOL G CLEF
    };

    const toUnicodeMap = new ToUnicodeMap(Object.entries(cmap).map(([code, char]) => ({
      [code]: char,
    }));

    const expectedCodePoints = [0x1D11E, 0x1D11F];
    const actualCodePoints = [];

    toUnicodeMap.forEach((charCode, codePoint) => {
      actualCodePoints.push(codePoint);
    });

    expect(actualCodePoints).toEqual(expectedCodePoints);
  });
});