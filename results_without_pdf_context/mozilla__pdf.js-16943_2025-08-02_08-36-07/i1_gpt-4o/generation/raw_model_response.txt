```javascript
it("should change the style of the line and resizers around a selected editor", async () => {
  const { AnnotationEditor } = await import("../../src/display/editor/editor.js");
  const { FreeTextEditor } = await import("../../src/display/editor/freetext.js");
  const { InkEditor } = await import("../../src/display/editor/ink.js");

  // Mocking getComputedStyle to return a specific outline width
  global.getComputedStyle = () => ({
    getPropertyValue: () => "2px",
  });

  // Initialize editors
  AnnotationEditor.initialize({});
  FreeTextEditor.initialize({});
  InkEditor.initialize({});

  // Create instances of editors
  const freeTextEditor = new FreeTextEditor({ parent: { viewport: { rotation: 0, rawDims: { pageWidth: 100, pageHeight: 100, pageX: 0, pageY: 0 } } }, id: "1", x: 10, y: 10, uiManager: { viewParameters: { rotation: 0 } } });
  const inkEditor = new InkEditor({ parent: { viewport: { rotation: 0, rawDims: { pageWidth: 100, pageHeight: 100, pageX: 0, pageY: 0 } } }, id: "2", x: 20, y: 20, uiManager: { viewParameters: { rotation: 0 } } });

  // Expected border line width after initialization
  const expectedBorderLineWidth = 2;

  // Actual border line width
  const actualBorderLineWidth = AnnotationEditor._borderLineWidth;

  // Verify that the border line width is set correctly
  expect(actualBorderLineWidth).toBe(expectedBorderLineWidth);
});
```