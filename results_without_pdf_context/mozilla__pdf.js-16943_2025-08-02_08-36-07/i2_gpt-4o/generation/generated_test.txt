it("should change the style of the line and the resizers around a selected editor", async () => {
  const { AnnotationEditor } = await import("../../src/display/editor/editor.js");
  const { FreeTextEditor } = await import("../../src/display/editor/freetext.js");
  const { InkEditor } = await import("../../src/display/editor/ink.js");

  // Initialize editors
  const annotationEditorParams = {
    parent: { viewport: { rotation: 0, rawDims: { pageWidth: 100, pageHeight: 100, pageX: 0, pageY: 0 } }, pageIndex: 0 },
    id: "test-editor",
    uiManager: { viewParameters: { rotation: 0 } },
    x: 10,
    y: 10,
    isCentered: false,
  };

  const freeTextEditor = new FreeTextEditor(annotationEditorParams);
  const inkEditor = new InkEditor(annotationEditorParams);

  // Initialize styles
  AnnotationEditor.initialize({});
  FreeTextEditor.initialize({});
  InkEditor.initialize({});

  // Define expected border line width
  const style = getComputedStyle(document.documentElement);
  const expectedBorderLineWidth = parseFloat(style.getPropertyValue("--outline-width")) || 0;

  // Generate actual border line width
  const actualBorderLineWidth = AnnotationEditor._borderLineWidth;

  // Compare expected with actual
  expect(actualBorderLineWidth).toBe(expectedBorderLineWidth);
});