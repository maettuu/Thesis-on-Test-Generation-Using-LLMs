```javascript
it("should display top and bottom images in the PDF file", async () => {
  const { PartialEvaluator } = await import("../../src/core/evaluator.js");
  const { Stream } = await import("../../src/core/stream.js");
  const { OPS } = await import("../../src/shared/util.js");

  const evaluator = new PartialEvaluator({
    xref: new XRefMock([]),
    handler: null,
    pageIndex: 0,
    idFactory: createIdFactory(0),
    fontCache: new Map(),
    builtInCMapCache: new Map(),
    standardFontDataCache: new Map(),
    globalImageCache: new Map(),
    systemFontCache: new Map(),
  });

  const resources = Dict.empty;
  const operatorList = new OperatorList();
  const imageStream = new Stream(new Uint8Array([0, 0, 0, 0]));
  const imageDict = new Dict();
  imageDict.set("W", 2);
  imageDict.set("H", 2);
  imageDict.set("SMask", null);
  imageDict.set("Mask", null);
  imageStream.dict = imageDict;

  await evaluator.buildPaintImageXObject({
    resources,
    image: imageStream,
    operatorList,
  });

  const imageOps = operatorList.fnArray.filter(op => op === OPS.paintImageXObject);
  expect(imageOps.length).toBe(1);
});
```