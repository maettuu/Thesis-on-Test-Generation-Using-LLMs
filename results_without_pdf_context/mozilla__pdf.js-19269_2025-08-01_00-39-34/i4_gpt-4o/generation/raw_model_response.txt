```javascript
it("should display top and bottom images in pdf file", async () => {
  const { PartialEvaluator } = await import("../../src/core/evaluator.js");
  const { OperatorList } = await import("../../src/core/operator_list.js");
  const { OPS } = await import("../../src/shared/util.js");

  const evaluator = new PartialEvaluator({
    xref: null,
    handler: null,
    pageIndex: 0,
    idFactory: null,
    fontCache: null,
    builtInCMapCache: null,
    standardFontDataCache: null,
    globalImageCache: null,
    systemFontCache: null,
  });

  const operatorList = new OperatorList();
  const resources = { get: () => null };
  const image = {
    dict: {
      get: (key) => {
        if (key === "W") return 100;
        if (key === "H") return 100;
        if (key === "SMask" || key === "Mask") return false;
        return null;
      },
      objId: "image1",
    },
    getBytes: () => new Uint8Array(10000),
  };

  await evaluator.buildPaintImageXObject({
    resources,
    image,
    operatorList,
    cacheKey: "image1",
    localImageCache: null,
    localColorSpaceCache: null,
  });

  const expectedOps = [OPS.paintImageXObject];
  const actualOps = operatorList.fnArray;

  expect(actualOps).toEqual(expectedOps);
});
```