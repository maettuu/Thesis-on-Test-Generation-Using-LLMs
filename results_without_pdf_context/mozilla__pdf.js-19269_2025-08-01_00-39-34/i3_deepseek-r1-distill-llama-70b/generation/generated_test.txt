it("should correctly handle images with masks", async () => {
  const xref = new XRefMock();
  const evaluator = new PartialEvaluator({
    xref,
    handler: new WorkerTask(),
    pageIndex: 0,
    idFactory: createIdFactory(),
    fontCache: new Map(),
    builtInCMapCache: new Map(),
    standardFontDataCache: new Map(),
    globalImageCache: new Map(),
    systemFontCache: new Map(),
    options: DefaultPartialEvaluatorOptions,
  });

  const image = {
    dict: new Dict({
      Type: "XObject",
      Subtype: "Image",
      SMask: new Dict(),
    }),
    args: ["img1"],
  };

  const operatorList = new OperatorList();

  addLocallyCachedImageOps(operatorList, image);

  expect(operatorList.fnArray).toContain(OPS.save);
  expect(operatorList.fnArray).toContain(OPS.setGState);
  expect(operatorList.fnArray).toContain(OPS.paintImageXObject);
  expect(operatorList.fnArray).toContain(OPS.restore);
});