it("should correctly compute the bounding box of a transformed rectangle", async () => {
  const { Util } = await import("../../src/shared/util.js");
  const canvasExtraState = {
    minX: Infinity,
    minY: Infinity,
    maxX: -Infinity,
    maxY: -Infinity,
    updateRectMinMax: CanvasExtraState.prototype.updateRectMinMax
  };

  const transform = [1, 0.5, 0, 1, 0, 0]; // Skew and rotation example
  const rect = [0, 0, 100, 100]; // Original rectangle

  canvasExtraState.updateRectMinMax(transform, rect);

  const p1 = Util.applyTransform(rect, transform);
  const p2 = Util.applyTransform(rect.slice(2), transform);
  const expectedMinX = Math.min(p1[0], p2[0], p1[0], p2[0]);
  const expectedMinY = Math.min(p1[1], p2[1], p1[1], p2[1]);
  const expectedMaxX = Math.max(p1[0], p2[0], p1[0], p2[0]);
  const expectedMaxY = Math.max(p1[1], p2[1], p1[1], p2[1]);

  expect(canvasExtraState.minX).toBe(expectedMinX);
  expect(canvasExtraState.minY).toBe(expectedMinY);
  expect(canvasExtraState.maxX).toBe(expectedMaxX);
  expect(canvasExtraState.maxY).toBe(expectedMaxY);
});