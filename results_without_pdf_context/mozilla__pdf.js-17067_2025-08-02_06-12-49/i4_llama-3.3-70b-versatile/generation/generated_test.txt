it("should render the pattern correctly after applying a transform", async () => {
  const { PDFDocument } = await import("../../src/core/document.js");
  const { PDFPage } = await import("../../src/core/document.js");
  const { CanvasGraphics } = await import("./canvas.js");
  const { Util } = await import("../../shared/util.js");

  const pdfBytes = await (await import("./test_utils.js")).loadPdfBytes("test.pdf");
  const pdfDoc = await PDFDocument.load(pdfBytes);
  const pdfPage = await pdfDoc.getPage(1);
  const canvas = document.createElement("canvas");
  const ctx = canvas.getContext("2d");
  const canvasGraphics = new CanvasGraphics(ctx, {}, {}, {}, {}, {});

  await pdfPage.render({
    canvasContext: ctx,
    viewport: pdfPage.getViewport({ scale: 1 }),
  });

  const expectedImageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
  const actualImageData = ctx.getImageData(0, 0, canvas.width, canvas.height);

  for (let i = 0; i < expectedImageData.data.length; i++) {
    if (expectedImageData.data[i] !== actualImageData.data[i]) {
      throw new Error("Pattern rendering is incorrect");
    }
  }
});