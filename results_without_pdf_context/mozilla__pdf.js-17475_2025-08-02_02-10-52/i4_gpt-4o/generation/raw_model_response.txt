```javascript
it("should correctly serialize and deserialize highlight annotations with visible highlights on cropped PDFs", async () => {
  const { HighlightEditor } = await import("../../src/display/editor/highlight.js");
  const { Util } = await import("../../src/shared/util.js");

  const pageDimensions = [600, 800];
  const rect = [0.1, 0.1, 0.5, 0.5];
  const color = [255, 255, 0];
  const opacity = 0.5;
  const quadPoints = [60, 720, 300, 720, 60, 680, 300, 680];

  const data = {
    rect,
    color,
    opacity,
    quadPoints,
    pageIndex: 0,
  };

  const parent = {
    drawLayer: {
      highlight: jest.fn().mockReturnValue({ id: "highlightId", clipPathId: "clipPathId" }),
      highlightOutline: jest.fn().mockReturnValue("outlineId"),
      addClass: jest.fn(),
      removeClass: jest.fn(),
      rotate: jest.fn(),
      updateBox: jest.fn(),
    },
    addUndoableEditor: jest.fn(),
    add: jest.fn(),
  };

  const uiManager = {
    highlightColors: new Map([["default", "#fff066"]]),
    direction: "ltr",
  };

  const editor = HighlightEditor.deserialize(data, parent, uiManager);
  editor.pageDimensions = pageDimensions;

  const serializedData = editor.serialize();
  const expectedQuadPoints = [60, 720, 300, 720, 60, 680, 300, 680];
  const expectedColor = Util.makeHexColor(...color);

  expect(serializedData.quadPoints).toEqual(expectedQuadPoints);
  expect(serializedData.color).toEqual(expectedColor);
  expect(serializedData.opacity).toBe(opacity);
});
```