it("should correctly serialize highlight boxes in cropped PDFs", async () => {
  const { PDFPageProxy } = await import("../../src/display/api.js");
  const { HighlightEditor } = await import("../../src/display/editor/highlight.js");

  // Setup mock PDF page and editor
  const page = new PDFPageProxy({
    pageWidth: 100,
    pageHeight: 100,
    pageIndex: 0,
  });

  const rect = [10, 10, 50, 50]; // Cropped rectangle
  const boxes = [{ x: 0.2, y: 0.2, width: 0.3, height: 0.3 }];

  // Create editor with cropped coordinates
  const editor = new HighlightEditor({
    pageIndex: 0,
    color: "#000",
    boxes: boxes,
    x: rect[0],
    y: rect[1],
    width: rect[2] - rect[0],
    height: rect[3] - rect[1],
    page: page,
    parent: null,
    uiManager: null,
  });

  // Serialize the data
  const data = editor.serialize();
  const serializedQuadPoints = data.quadPoints;
  const serializedOutlines = data.outlines;

  // Deserialize back to compare
  const deserializedEditor = HighlightEditor.deserialize(data, null, null);

  // Check if the deserialized boxes match the expected coordinates
  // within the cropped rectangle
  const expectedBox = {
    x: (rect[2] - rect[0]) * 0.2,
    y: (rect[3] - rect[1]) * 0.2,
    width: (rect[2] - rect[0]) * 0.3,
    height: (rect[3] - rect[1]) * 0.3,
  };

  expect(deserializedEditor.#boxes[0]).toEqual(expectedBox);
});