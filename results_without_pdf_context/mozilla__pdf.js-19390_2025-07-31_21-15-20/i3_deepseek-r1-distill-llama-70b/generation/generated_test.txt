it("should correctly render password fields as password input fields", async () => {
  const { createIdFactory } = await import("../../src/core/annotation.js");
  const idFactory = createIdFactory();

  // Create a mock annotation with password field flag set
  const annotation = new Dict({
    FT: "Tx", // Text field
    Ff: AnnotationFieldFlag.PASSWORD,
    T: "Password",
    V: "test",
  });

  const factory = new AnnotationFactory();
  const data = await factory.create({
    xref: new XRefMock(),
    ref: new Ref(),
    annotationGlobals: {},
    idFactory,
    collectFields: false,
    pageRef: 0,
  });

  // Render the annotation
  const element = await AnnotationElementFactory.create({
    data: data,
    layer: {},
    linkService: {},
    downloadManager: {},
    imageResourcesPath: "",
    renderForms: true,
    svgFactory: {},
    annotationStorage: {},
    enableScripting: false,
    hasJSActions: false,
    fieldObjects: {},
    parent: {},
  });

  const input = element.render().querySelector("input");
  expect(input.type).toBe("password");
});