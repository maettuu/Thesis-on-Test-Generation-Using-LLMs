it("should render password fields as password fields", async () => {
  const { Annotation } = await import("../../src/core/annotation.js");
  const { WidgetAnnotation } = await import("../../src/core/annotation.js");
  const { TextWidgetAnnotation } = await import("../../src/core/annotation.js");
  const { AnnotationFactory } = await import("../../src/core/annotation.js");

  const dict = {
    FT: "Tx",
    Ff: AnnotationFieldFlag.PASSWORD,
    V: "password",
  };

  const annotation = new WidgetAnnotation({
    dict,
    ref: null,
    annotationGlobals: {},
    subtype: "Widget",
    id: "id",
    annotationType: AnnotationType.WIDGET,
    collectFields: true,
    orphanFields: null,
    pageIndex: null,
    pageRef: null,
  });

  const textWidgetAnnotation = new TextWidgetAnnotation({
    data: annotation.data,
    dict,
    xref: null,
    annotationGlobals: {},
    subtype: "Tx",
    id: "id",
    annotationType: AnnotationType.WIDGET,
    collectFields: true,
    orphanFields: null,
    pageIndex: null,
    pageRef: null,
  });

  const fieldObject = textWidgetAnnotation.getFieldObject();

  expect(fieldObject.password).toBe(true);
});