```javascript
it("should render password fields as password input type", async () => {
  const { TextWidgetAnnotation } = await import("../../src/core/annotation.js");
  const { AnnotationFieldFlag } = await import("../../src/shared/util.js");
  const { TextWidgetAnnotationElement } = await import("../../src/display/annotation_layer.js");

  const annotationData = {
    id: "test-id",
    fieldFlags: AnnotationFieldFlag.PASSWORD,
    fieldValue: "secret",
    defaultFieldValue: "default",
    multiLine: false,
    readOnly: false,
    hidden: false,
    annotationFlags: 0,
    rect: [0, 0, 100, 20],
    borderStyle: { width: 1 },
    color: [0, 0, 0],
    backgroundColor: [255, 255, 255],
    borderColor: [0, 0, 0],
    rotation: 0,
    fieldName: "passwordField",
    actions: {},
    pageIndex: 0,
  };

  const annotation = new TextWidgetAnnotation({ data: annotationData });
  const element = new TextWidgetAnnotationElement({
    data: annotation.data,
    layer: document.createElement("div"),
    linkService: {},
    renderForms: true,
  });

  const renderedElement = element.render();
  const inputElement = renderedElement.querySelector("input");

  const expectedType = "password";
  const actualType = inputElement.type;

  expect(actualType).toBe(expectedType);
});
```