it("should render password fields with obscured characters", async () => {
  const { AnnotationFieldFlag } = await import("../../src/shared/util.js");
  const { WidgetAnnotation } = await import("../../src/core/annotation.js");
  const { TextWidgetAnnotationElement } = await import("../../src/display/annotation_layer.js");

  const params = {
    dict: {
      get: (key) => {
        if (key === "Ff") return AnnotationFieldFlag.PASSWORD;
        if (key === "V") return "secret";
        return null;
      },
      has: () => false,
    },
    xref: null,
    annotationGlobals: { acroForm: { get: () => null } },
    needAppearances: false,
  };

  const widgetAnnotation = new WidgetAnnotation(params);
  const textWidgetAnnotationElement = new TextWidgetAnnotationElement({
    data: widgetAnnotation.data,
    renderForms: true,
    annotationStorage: new Map(),
  });

  const container = textWidgetAnnotationElement.render();
  const inputElement = container.querySelector("input");

  const expectedType = "password";
  const actualType = inputElement.type;

  expect(actualType).toEqual(expectedType);
});