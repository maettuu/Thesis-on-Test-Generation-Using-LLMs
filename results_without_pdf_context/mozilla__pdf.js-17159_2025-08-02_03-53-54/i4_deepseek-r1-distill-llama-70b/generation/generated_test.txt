it("should correctly reflect radio button state in print view", async () => {
  const { PDFDocument } = await import("../../src/display/pdf_document.js");
  const { AnnotationFactory } = await import("../../src/core/annotation.js");

  // Create a sample PDF with radio buttons
  const pdf = new PDFDocument();
  const page = pdf.addPage();
  const radioGroup = pdf.annotation({
    type: "widget",
    subtype: "Button",
    fieldFlags: AnnotationFieldFlag.RADIO,
    rect: [100, 100, 150, 150],
    buttonValue: "Off",
    fieldValue: "Off"
  });
  const radio1 = pdf.annotation({
    type: "widget",
    subtype: "Button",
    fieldFlags: AnnotationFieldFlag.RADIO,
    rect: [100, 200, 150, 250],
    buttonValue: "Radio1",
    fieldValue: "Radio1"
  });
  const radio2 = pdf.annotation({
    type: "widget",
    subtype: "Button",
    fieldFlags: AnnotationFieldFlag.RADIO,
    rect: [100, 300, 150, 350],
    buttonValue: "Radio2",
    fieldValue: "Radio2"
  });

  // Load the PDF and create annotations
  const pdfDoc = await PDFDocument.load(pdf);
  const annotations = await pdfDoc.getAnnotations();
  const radioAnnotation = annotations[0];

  // Change the radio button state
  radioAnnotation.data.fieldValue = "Radio2";

  // Generate print view
  const printAppearance = await radioAnnotation._getAppearance({
    evaluator: { xref: pdfDoc.xref },
    task: null,
    intent: RenderingIntentFlag.SAVE,
    annotationStorage: null
  });

  // Verify the print appearance reflects the correct state
  expect(printAppearance).toContain("Radio2");
});