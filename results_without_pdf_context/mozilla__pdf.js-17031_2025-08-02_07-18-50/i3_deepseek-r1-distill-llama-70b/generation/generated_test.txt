it("should handle frequent moveInDOM calls without blocking", async () => {
  const { AnnotationEditor } = await import("../../src/display/editor/editor.js");
  const editor = new AnnotationEditor({
    parent: { moveEditorInDOM: jest.fn() },
    uiManager: {},
    id: "test-editor",
    x: 0,
    y: 0
  });

  const moveInDOMSpy = jest.spyOn(editor, "moveInDOM");

  // Simulate multiple moves to test the debouncing
  for (let i = 0; i < 10; i++) {
    editor.moveInDOM();
  }

  // Since the moves are debounced with setTimeout, they should not block
  await new Promise(resolve => setTimeout(resolve, 100));

  expect(moveInDOMSpy).toHaveBeenCalled();
});