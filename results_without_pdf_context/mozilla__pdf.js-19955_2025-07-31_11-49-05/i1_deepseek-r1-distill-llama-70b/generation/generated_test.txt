it("should handle Type fonts with missing FontDescriptor", async () => {
  const { XRefMock, createIdFactory } = await import("./test_utils.js");
  const { Dict, Name } = await import("../../src/core/primitives.js");
  const { PartialEvaluator } = await import("../../src/core/evaluator.js");

  const xref = new XRefMock();
  const idFactory = createIdFactory();
  const evaluator = new PartialEvaluator({
    xref,
    handler: null,
    pageIndex: 0,
    idFactory,
    fontCache: new Map(),
    builtInCMapCache: new Map(),
    standardFontDataCache: new Map(),
    globalColorSpaceCache: new Map(),
    globalImageCache: new Map(),
    systemFontCache: new Map(),
    options: PartialEvaluator.DefaultPartialEvaluatorOptions,
  });

  const dict = new Dict();
  dict.set("FontBBox", [0, 0, 0, 0]);

  try {
    await evaluator.translateFont({
      descriptor: null,
      dict,
      baseDict: dict,
      composite: false,
      type: "Type3",
      firstChar: 0,
      lastChar: 0,
      toUnicode: null,
      cssFontInfo: null,
    });
    throw new Error("Expected FormatError to be thrown");
  } catch (error) {
    if (error instanceof FormatError) {
      // Expected error before patch
      throw error;
    }
  }
});