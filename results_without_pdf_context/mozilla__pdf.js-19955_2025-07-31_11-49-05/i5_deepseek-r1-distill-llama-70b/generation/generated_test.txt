it("should generate text layer for PDF with problematic font", async () => {
  const { PDFDocument } = await import("../../src/display/api.js");
  const { TextLayer } = await import("../../src/display/text_layer.js");
  const { getCrossOriginHostname } = await import("./test_utils.js");

  const hostname = getCrossOriginHostname();
  const pdfPath = `${hostname}/web/test_files/Capital.Bancorp.Inc.Corporate.Responsibility.2025509.SD000000003063823863-1-2.pdf`;
  const pdf = await PDFDocument.load(await fetch(pdfPath).then((res) => res.clone()));
  const page = await pdf.getPage(1);
  const textLayer = new TextLayer({
    page,
    container: document.createElement("div"),
    viewport: page.getViewport({ scale: 1 }),
  });

  await new Promise((resolve) => {
    textLayer.addEventListener("rendered", () => {
      resolve();
    });
    textLayer.render();
  });

  const textContent = textLayer.textContent;
  expect(textContent).not.toBe("");
});