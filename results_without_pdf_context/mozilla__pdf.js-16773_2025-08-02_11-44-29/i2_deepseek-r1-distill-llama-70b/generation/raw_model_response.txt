<think>
Okay, I need to write a regression test for the issue where the stamp annotation editor only allows supported image types. The patch adds a list of supported types and sets the input's accept attribute to StampEditor.supportedTypes. 

First, I should understand what the test needs to check. Before the patch, the input accepted "image/*", which allows all image types. After the patch, it should only accept specific types like apng, avif, bmp, etc. So the test should verify that the accept attribute is correctly set to the supported types.

I'll create a test that checks the value of StampEditor.supportedTypes. The test will fail before the patch because the supportedTypes property doesn't exist, so accessing it would return undefined. After the patch, it should return the correct string of supported MIME types.

I'll structure the test using Jest. I'll import the necessary modules, create a test block, and check if the supportedTypes is as expected. Since the test needs to be self-contained, I'll make sure all imports are correct and no external dependencies are added.

I'll write the test to compare the expected supported types with the actual value from StampEditor.supportedTypes. This way, it ensures that the patch correctly limits the image types as intended.
</think>

```javascript
it("should only accept supported image types", async () => {
  const { StampEditor, AnnotationEditorType } = await import("../../display/editor/stamp.js");
  const supportedTypes = [
    "image/apng",
    "image/avif",
    "image/bmp",
    "image/gif",
    "image/jpeg",
    "image/png",
    "image/svg+xml",
    "image/webp",
    "image/x-icon",
  ].join(",");
  
  expect(StampEditor.supportedTypes).toBe(supportedTypes);
});
```