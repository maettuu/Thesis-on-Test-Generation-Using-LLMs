it("should only allow supported image types when selecting an image in the stamp annotation", async () => {
  const { StampEditor } = await import("./stamp.js");
  const { AnnotationEditorType } = await import("../../shared/util.js");
  const supportedTypes = await StampEditor.supportedTypes;
  const unsupportedType = "image/tiff";
  const fileInput = document.createElement("input");
  fileInput.type = "file";
  fileInput.accept = supportedTypes;
  const changeEvent = new Event("change");
  fileInput.files = [{ type: unsupportedType }];
  const stampEditor = new StampEditor({ type: AnnotationEditorType.STAMP });
  stampEditor.#bitmapPromise = new Promise(resolve => {
    fileInput.addEventListener("change", () => {
      resolve();
    });
  });
  fileInput.dispatchEvent(changeEvent);
  await stampEditor.#bitmapPromise;
  const actualType = stampEditor.#bitmapUrl.split(",")[0].split(":")[1].split(";")[0];
  const expectedType = supportedTypes.split(",")[0].split(":")[1].split(";")[0];
  expect(actualType).not.toBe(unsupportedType);
});