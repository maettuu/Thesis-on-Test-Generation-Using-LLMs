```javascript
it("should render emojis correctly in FreeTextAnnotation PDFs", async () => {
  const { PDFDocument } = await import("../../src/core/document.js");
  const { FreeTextAnnotation } = await import("../../src/core/annotation.js");
  const { StringStream } = await import("../../src/core/stream.js");
  const { Dict, Name } = await import("../../src/core/primitives.js");
  const { codePointIter } = await import("../../src/core/core_utils.js");

  const xrefMock = {
    getNewPersistentRef: (obj) => obj,
  };

  const appearance = "BT /F1 12 Tf 0 0 Td (Hello 🌍) Tj ET";
  const dict = new Dict();
  dict.set("Subtype", Name.get("FreeText"));
  dict.set("DA", appearance);

  const annotation = new FreeTextAnnotation({
    dict,
    xref: xrefMock,
  });

  const pdfDoc = new PDFDocument();
  pdfDoc.catalog = new Dict();
  pdfDoc.catalog.set("Pages", new Dict());
  pdfDoc.catalog.get("Pages").set("Kids", [new Dict()]);
  pdfDoc.catalog.get("Pages").get("Kids")[0].set("Annots", [annotation]);

  const expected = Array.from(codePointIter("Hello 🌍")).map((code) =>
    String.fromCodePoint(code)
  );
  const actual = Array.from(codePointIter(annotation.appearance)).map((code) =>
    String.fromCodePoint(code)
  );

  expect(actual).toEqual(expected);
});
```