```javascript
it("should delete the selected element when pressing the Delete key", async () => {
  const { AnnotationEditorUIManager, KeyboardManager } = await import("../../src/display/editor/tools.js");
  const { Util } = await import("../../shared/util.js");
  const { PDFDocument, PDFPage } = await import("../../src/core/document.js");
  const { AnnotationStorage } = await import("../../src/display/annotation_storage.js");
  const { PDFNetworkStream } = await import("../../src/display/network.js");

  const pdfDocument = await PDFDocument.load(await PDFNetworkStream.fetch("test.pdf"));
  const annotationStorage = new AnnotationStorage();
  const eventBus = { _on: () => {} };
  const container = {};
  const pageColors = {};

  const annotationEditorUIManager = new AnnotationEditorUIManager(container, eventBus, pdfDocument, pageColors);
  annotationEditorUIManager.#mode = "EDIT";

  const selectedEditor = { id: "test-id" };
  annotationEditorUIManager.#selectedEditors.add(selectedEditor);

  const keyboardEvent = { key: "Delete" };
  annotationEditorUIManager.keydown(keyboardEvent);

  const expectedDeletedElementId = selectedEditor.id;
  const actualDeletedElementId = Array.from(annotationEditorUIManager.#deletedAnnotationsElementIds).pop();

  expect(actualDeletedElementId).toBe(expectedDeletedElementId);
});
```