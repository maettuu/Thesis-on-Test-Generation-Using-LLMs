it("should support highlighting images of text in addition to text", async () => {
  const { build, getDocument, PDFWorker } = await import("../../src/display/api.js");
  const { DOMSVGFactory } = await import("../../src/display/display_utils.js");
  const { AnnotationEditorLayer } = await import("../../src/display/editor/annotation_editor_layer.js");
  const { Outliner } = await import("../../src/display/editor/outliner.js");
  const { Util } = await import("../../src/shared/util.js");

  const pdfWorker = new PDFWorker();
  const pdfDoc = await build({ url: "path/to/example.pdf", worker: pdfWorker });
  const annotationEditorLayer = new AnnotationEditorLayer({
    uiManager: {},
    pageIndex: 0,
    div: document.createElement("div"),
    accessibilityManager: {},
    annotationLayer: {},
    drawLayer: new DrawLayer({ pageIndex: 0 }),
    textLayer: {},
    viewport: {},
    l10n: {},
  });

  const outliner = new Outliner();
  const highlightOutlines = outliner.getOutlines(true);
  const { id, clipPathId } = annotationEditorLayer.drawLayer.highlight(
    highlightOutlines,
    "yellow",
    0.5
  );

  const expectedOutline = highlightOutlines.toSVGPath();
  const actualOutline = annotationEditorLayer.drawLayer
    .getElementById(id)
    .getAttribute("d");

  expect(actualOutline).toBe(expectedOutline);
});