<think>
Okay, I need to write a regression test for the issue where the PDF viewer should support highlighting images of text in addition to text. The patch provided adds functionality for free highlighting, which allows users to draw highlights without selecting text. 

First, I should understand what the patch does. It introduces a new way to create highlights by drawing with the mouse when not over text. The test needs to verify that this functionality works correctly after the patch.

I'll start by setting up a test environment. I'll need a PDF document, perhaps one with an image or some text. Since the test is about highlighting images, I'll use a sample image PDF.

In the test, I'll simulate the user drawing a free highlight. That means moving the mouse without selecting text. I'll create a HighlightEditor instance with the necessary parameters, including the event object to simulate the mouse movement.

I'll check if the highlight is correctly created and added to the draw layer. Specifically, I'll look for the existence of the created editor and ensure it's in the correct state.

Before the patch, the HighlightEditor wouldn't handle free highlights, so the test would fail because the editor wouldn't be created. After the patch, the editor should be created and added, making the test pass.

I'll structure the test using Jest, importing the necessary modules dynamically. I'll initialize the editor with a sample event and check if the editor exists and is properly set up.

So, the test will import the HighlightEditor and related modules, create an instance with a mock event, and assert that the editor is correctly initialized. This should cover the regression and ensure the patch works as intended.
</think>

```javascript
it("should create a free highlight when drawing over non-text areas", async () => {
  const { HighlightEditor, AnnotationEditorType } = await import("../../display/editor/highlight.js");
  const { DrawLayer } = await import("../../display/draw_layer.js");
  const { AnnotationEditorLayer } = await import("../../display/editor/annotation_editor_layer.js");
  const { Util } = await import("../../shared/util.js");

  // Initialize dependencies
  const drawLayer = new DrawLayer({ pageIndex: 0 });
  const parent = {
    drawLayer,
    getNextId: () => 1,
    add: () => {},
    viewport: { rawDims: { pageWidth: 100, pageHeight: 100 }, rotation: 0 }
  };

  // Simulate a pointer event
  const event = {
    offsetX: 50,
    offsetY: 50,
    preventDefault: () => {}
  };

  // Create editor
  const editor = new HighlightEditor({
    parent,
    event,
    isCentered: false,
    uiManager: { getMode: () => AnnotationEditorType.HIGHLIGHT }
  });

  // Verify editor was created and added
  expect(editor).toBeDefined();
  expect(drawLayer.highlight).toHaveBeenCalled();
});
```