```javascript
it("should support highlighting images of text in addition to text", async () => {
  const { DrawLayer } = await import("../../src/display/draw_layer.js");
  const { AnnotationEditorLayer } = await import("../../src/display/editor/annotation_editor_layer.js");
  const { HighlightEditor } = await import("../../src/display/editor/highlight.js");
  const { FreeOutliner } = await import("../../src/display/editor/outliner.js");

  const drawLayer = new DrawLayer({ pageIndex: 0 });
  const annotationEditorLayer = new AnnotationEditorLayer({
    uiManager: { getMode: () => HighlightEditor._editorType, addLayer: () => {}, registerEditorTypes: () => {} },
    pageIndex: 0,
    div: document.createElement("div"),
    drawLayer,
    textLayer: { div: document.createElement("div") },
    viewport: { rotation: 0, rawDims: { pageWidth: 100, pageHeight: 100 } },
    l10n: {},
  });

  const freeOutliner = new FreeOutliner({ x: 0.1, y: 0.1 }, [0, 0, 100, 100], 1, 10);
  const { id, clipPathId } = drawLayer.highlight(freeOutliner, "#fff066", 1, true);

  const highlightEditor = new HighlightEditor({
    parent: annotationEditorLayer,
    highlightId: id,
    highlight: freeOutliner,
    clipPathId,
  });

  const expected = highlightEditor.serialize();
  const actual = {
    annotationType: HighlightEditor._editorType,
    color: [255, 240, 102],
    opacity: 1,
    quadPoints: null,
    outlines: freeOutliner.getOutlines(true).serialize([0, 0, 100, 100], 0),
    pageIndex: 0,
    rect: [0, 0, 100, 100],
    rotation: 0,
    structTreeParentId: null,
  };

  expect(expected).toEqual(actual);
});
```