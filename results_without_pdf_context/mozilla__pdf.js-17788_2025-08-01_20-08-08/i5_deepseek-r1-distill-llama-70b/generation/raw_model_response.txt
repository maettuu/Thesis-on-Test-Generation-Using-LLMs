<think>
Okay, I need to write a regression test for the issue where Voice Over doesn't read highlighted text during editing inside a PDF. The patch provided makes several changes, so I should focus on how those changes affect the functionality.

First, I'll look at the patch details. It seems that in `highlight.js`, a `#text` property is added to the `HighlightEditor` class. When rendering, if `this.#text` exists, it creates a `<mark>` element with the text and adds a class `visuallyHidden`. Also, the `highlightDiv` now has `aria-hidden="true"`. This suggests that the highlighted text is now being made available to screen readers while being visually hidden.

So, the test needs to verify that when a highlight is created with text, the `<mark>` element is present and contains that text. Also, the highlight div should be hidden from screen readers.

I'll structure the test as follows:
1. Import necessary modules, like `HighlightEditor` from `../../src/display/editor/highlight.js`.
2. Create a test PDF document and a page.
3. Initialize the `HighlightEditor` with some text.
4. Render the editor and check if the `<mark>` element exists and contains the correct text.
5. Ensure that the highlight div has `aria-hidden="true"`.

I'll write the test using Jest syntax, making sure it's self-contained and only uses the provided imports. The test should fail before the patch because the `<mark>` element wouldn't be present, and pass after the patch since the element is added.

I need to make sure all variables are correctly initialized and that the test accurately reflects the changes in the patch. Also, I should handle any potential async operations, but since rendering is synchronous, I might not need `async/await` here.

Finally, I'll write the test code, ensuring it's concise and only includes the necessary steps to verify the issue is resolved.
</think>

```javascript
it("should include highlighted text for screen readers when editing", () => {
  const { HighlightEditor } = require("../../src/display/editor/highlight.js");
  const editor = new HighlightEditor({
    text: "Test Highlight",
    boxes: [],
    methodOfCreation: "highlight"
  });
  
  const renderedEditor = editor.render();
  const markElement = renderedEditor.querySelector("mark.visuallyHidden");
  
  expect(markElement).toBeTruthy();
  expect(markElement.textContent).toBe("Test Highlight");
  
  const highlightDiv = renderedEditor.querySelector("div.internal");
  expect(highlightDiv.getAttribute("aria-hidden")).toBe("true");
});
```