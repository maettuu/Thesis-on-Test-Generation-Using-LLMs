```javascript
it("should make Voice Over read highlighted text during editing inside a PDF", async () => {
  const { PDFDocument, Page } = await import("../../src/core/document.js");
  const { build } = await import("../../src/display/api.js");
  const { DOMSVGFactory } = await import("../../src/display/display_utils.js");
  const { DrawLayer } = await import("../../src/display/draw_layer.js");
  const { HighlightEditor } = await import("../../src/display/editor/highlight.js");
  const { AnnotationEditorUIManager } = await import("../../src/display/editor/tools.js");

  const pdfDoc = await build({ url: "path/to/example.pdf" });
  const page = await pdfDoc.getPage(1);
  const svgFactory = new DOMSVGFactory();
  const drawLayer = new DrawLayer({ pageIndex: 0 });
  const highlightEditor = new HighlightEditor({});

  const text = "Example text to be highlighted";
  const selection = { anchorNode: { nodeType: 3, data: text }, anchorOffset: 0, focusNode: { nodeType: 3, data: text }, focusOffset: text.length };
  const params = { boxes: [{ x: 0, y: 0, width: 100, height: 100 }], text, anchorNode: selection.anchorNode, anchorOffset: selection.anchorOffset, focusNode: selection.focusNode, focusOffset: selection.focusOffset };

  drawLayer.setParent(document.body);
  const div = highlightEditor.render();
  document.body.appendChild(div);
  highlightEditor.setParent({ drawLayer });

  const mark = div.querySelector("mark");
  expect(mark).not.toBeNull();
  expect(mark.textContent).toBe(text);
  expect(mark.className).toBe("visuallyHidden");
});
```