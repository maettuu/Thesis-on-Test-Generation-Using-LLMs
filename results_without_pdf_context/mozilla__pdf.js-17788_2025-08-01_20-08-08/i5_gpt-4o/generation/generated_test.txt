it("should read highlighted text during editing inside a PDF", async () => {
  const { PDFDocumentProxy, getDocument } = await import("../../src/display/api.js");
  const { AnnotationEditorUIManager } = await import("../../src/display/editor/tools.js");
  const { AnnotationEditorLayer } = await import("../../src/display/editor/annotation_editor_layer.js");

  const loadingTask = getDocument({ url: "test.pdf" });
  const pdfDocument = await loadingTask.promise;
  const pdfPage = await pdfDocument.getPage(1);

  const annotationEditorLayer = new AnnotationEditorLayer({
    pageDiv: document.createElement("div"),
    pdfPage,
    viewport: pdfPage.getViewport({ scale: 1.0 }),
  });

  const uiManager = new AnnotationEditorUIManager({
    container: document.createElement("div"),
    eventBus: { dispatch: () => {} },
  });

  annotationEditorLayer.uiManager = uiManager;
  await annotationEditorLayer.render();

  const highlightEditor = uiManager.getEditor("highlight");
  highlightEditor.setText("Sample highlighted text");

  const expectedText = "Sample highlighted text";
  const actualText = highlightEditor.getText();

  expect(actualText).toBe(expectedText);
});