it("should ignore Objectprototype properties in opMap", async () => {
  const xref = new XRefMock({
    hello: new Dict({
      Type: "Pages",
      Kids: [],
      Count: 0,
    }),
  });

  const content = `
    q
    q
    1 0 0 1 0 0 cm
    /hello << 
    /Length 35 0 R
    >> stream
    toString
    endstream
    startxref
    0
    %%EOF
  `;

  const stream = new StringStream(content);
  const operatorList = new OperatorList();
  const evaluator = new PartialEvaluator({
    xref,
    handler: {},
    pageIndex: 0,
    idFactory: createIdFactory(),
    fontCache: new Map(),
    builtInCMapCache: new Map(),
    standardFontDataCache: new Map(),
    globalImageCache: new Map(),
    systemFontCache: new Map(),
    options: {},
  });

  const opMap = evaluator.constructor.opMap;
  const originalOpMap = { ...opMap };

  try {
    delete opMap.toString;
    await evaluator.getOperatorList({
      stream,
      task: new WorkerTask(),
      resources: new Dict(),
      operatorList,
      initialState: new EvalState(),
    });
  } catch (error) {
    throw new FormatError("Should not have thrown an error");
  }
});