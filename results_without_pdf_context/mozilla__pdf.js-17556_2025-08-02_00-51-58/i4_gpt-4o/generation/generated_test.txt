it("should ignore invalid PDF operators like toString", async () => {
  const { Parser } = await import("../../src/core/parser.js");
  const { Lexer } = await import("../../src/core/parser.js");
  const { Cmd } = await import("../../src/core/primitives.js");
  const { EOF } = await import("../../src/core/primitives.js");
  const { EvaluatorPreprocessor } = await import("../../src/core/evaluator.js");
  const { Stream } = await import("../../src/core/stream.js");

  const stream = new Stream(new Uint8Array([116, 111, 83, 116, 114, 105, 110, 103])); // "toString"
  const lexer = new Lexer(stream, EvaluatorPreprocessor.opMap);
  const parser = new Parser({ lexer, xref: null });

  const operation = { fn: null, args: null };
  const preprocessor = new EvaluatorPreprocessor(stream, null);

  const result = preprocessor.read(operation);

  expect(result).toBe(false);
  expect(operation.fn).toBe(null);
  expect(operation.args).toBe(null);
});