it("should ignore invalid PDF operators like toString", async () => {
  const { Parser } = await import("../../src/core/parser.js");
  const { Lexer } = await import("../../src/core/parser.js");
  const { Stream } = await import("../../src/core/stream.js");
  const { EvaluatorPreprocessor } = await import("../../src/core/evaluator.js");
  const { OPS } = await import("../../src/shared/util.js");

  const pdfStream = new Stream(new Uint8Array([116, 111, 83, 116, 114, 105, 110, 103])); // "toString"
  const lexer = new Lexer(pdfStream, EvaluatorPreprocessor.opMap);
  const parser = new Parser({ lexer, xref: null });

  const operation = { fn: null, args: null };
  parser.getObj = () => "toString"; // Mocking getObj to return "toString"

  const result = parser.read(operation);
  const expected = false; // "toString" should not be a valid operator

  expect(result).toBe(expected);
});