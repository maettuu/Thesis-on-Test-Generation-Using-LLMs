it("should resize SVG images without preserving aspect ratio", async () => {
  const { ImageManager, Util } = await import("../../src/display/editor/tools.js");
  const { stringToUTF8String } = await import("../../shared/util.js");

  // Create a test SVG image
  const svg = `<svg viewBox="0 0 100 100" width="100" height="100" xmlns="http://www.w3.org/2000/svg">
    <rect width="100" height="100" style="fill:red;"/>
  </svg>`;

  // Create an ImageManager instance
  const imageManager = new ImageManager();

  // Use the ImageManager to get the image data
  const imageKey = `image_${Date.now()}`;
  const imageData = await imageManager.#get(imageKey, svg);

  // Create a canvas to draw the image
  const canvas = new OffscreenCanvas(100, 50); // Resized canvas (changed aspect ratio)
  const ctx = canvas.getContext("2d");

  // Draw the image on the canvas
  ctx.drawImage(imageData.bitmap, 0, 0, 100, 50);

  // Check if the image filled the canvas without preserving aspect ratio
  const pixels = ctx.getImageData(0, 0, 1, 1).data;
  const isRed = pixels[0] === 255 && pixels[1] === 0 && pixels[2] === 0;

  expect(isRed).toBe(true);
});