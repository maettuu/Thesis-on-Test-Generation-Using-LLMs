it("should respect verbosity levels when decoding JPX images", async () => {
  const { JpxImage } = await import("../../src/core/jpx.js");
  const { Util, setVerbosityLevel, VerbosityLevel } = await import("../../shared/util.js");

  const mockWarn = jest.fn();
  const originalWarn = Util.warn;
  Util.warn = mockWarn;

  // Mock OpenJPEG module
  const mockOpenJPEG = {
    decode: () => "Warning message"
  };
  const originalModule = JpxImage.#module;
  JpxImage.#module = mockOpenJPEG;

  // Test with verbosity level 0 (error)
  setVerbosityLevel(VerbosityLevel.error);
  expect(() => JpxImage.decode(new Uint8Array())).toThrow();
  expect(mockWarn).not.toHaveBeenCalled();

  // Reset mock
  mockWarn.mockClear();

  // Test with verbosity level 1 (info)
  setVerbosityLevel(VerbosityLevel.info);
  expect(() => JpxImage.decode(new Uint8Array())).toThrow();
  expect(mockWarn).toHaveBeenCalled();

  // Restore original module and warn
  JpxImage.#module = originalModule;
  Util.warn = originalWarn;
});