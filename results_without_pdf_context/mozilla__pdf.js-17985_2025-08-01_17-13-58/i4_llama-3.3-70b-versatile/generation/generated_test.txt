it("should respect the PDFjs verbosity levels for OpenJPEG warnings", async () => {
  const { setVerbosityLevel, VerbosityLevel, warn } = await import("../../src/shared/util.js");
  const { JpxImage } = await import("../../src/core/jpx.js");
  const { OpenJPEG } = await import("../../external/openjpeg/openjpeg.js");

  setVerbosityLevel(VerbosityLevel.WARN);
  let warned = false;
  const originalWarn = warn;
  warn = (message) => {
    warned = true;
  };

  const openjpeg = OpenJPEG({ warn });
  JpxImage.decode = () => {
    openjpeg.decode("invalid data");
  };

  JpxImage.decode();
  expect(warned).toBe(true);

  warned = false;
  setVerbosityLevel(VerbosityLevel.ERRORS);
  JpxImage.decode();
  expect(warned).toBe(false);

  warn = originalWarn;
});