it("should respect the PDFjs verbosity levels for OpenJPEG warnings", async () => {
  const { setVerbosityLevel, getVerbosityLevel, VerbosityLevel, warn } = await import("../../src/shared/util.js");
  const { JpxImage } = await import("../../src/core/jpx.js");
  setVerbosityLevel(VerbosityLevel.WARN);
  const originalWarn = console.warn;
  const warnings = [];
  console.warn = (...args) => warnings.push(...args);
  JpxImage.decode("invalid_data");
  console.warn = originalWarn;
  expect(warnings.length).toBe(0);
  setVerbosityLevel(VerbosityLevel.ERRORS);
  warnings.length = 0;
  JpxImage.decode("invalid_data");
  expect(warnings.length).toBe(0);
  setVerbosityLevel(VerbosityLevel.WARN);
  const OpenJPEG = await import("../../external/openjpeg/openjpeg.js");
  const openjpeg = OpenJPEG({ warn });
  openjpeg.decode("invalid_data");
  expect(warnings.length).toBe(1);
});