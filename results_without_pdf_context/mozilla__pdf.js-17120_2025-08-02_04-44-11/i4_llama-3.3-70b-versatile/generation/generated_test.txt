it("should not throw an error when parsing a CFF file", async () => {
  const { Stream } = await import("../../src/core/stream.js");
  const { CFFDictDataMap, CFFDictPrivateDataMap, CFFEncodingMap } = await import("./cffStandardStrings.js");
  const { readFontIndexData, readFontDictData, readCharset, readCharstringEncoding } = await import("./fonts_utils.js");

  const cffFileArray = new Uint8Array([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);
  const stream = new Stream(cffFileArray);

  const topDict = readFontIndexData(stream, true);
  const strings = readFontIndexData(stream);
  CFFDictDataMap['12']['23'] = { name: 'random', operand: 'number' };

  const privateDict = [12, 23];
  const parsedPrivateDict = readFontDictData(privateDict, CFFDictPrivateDataMap);

  expect(parsedPrivateDict).toEqual(['random']);
});