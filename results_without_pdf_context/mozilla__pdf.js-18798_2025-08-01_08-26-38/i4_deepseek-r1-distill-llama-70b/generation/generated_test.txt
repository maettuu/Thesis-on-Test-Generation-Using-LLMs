it("should use the original bbox origin even if negative", async () => {
  const { TilingPattern } = await import("../../src/display/pattern_helper.js");

  const dummyCtx = {
    canvas: { width: 100, height: 100 },
    translate() {},
    save() {},
    restore() {},
  };

  const dummyGraphicsFactory = {
    createCanvasGraphics: (ctx) => ({
      ctx,
      groupLevel: 0,
      transform() {},
      executeOperatorList() {},
      endDrawing() {},
    }),
  };

  const IR = [];
  IR[2] = []; // operatorList
  IR[3] = [1, 0, 0, 1, 0, 0]; // matrix (identity)
  IR[4] = [-10, -10, 10, 10]; // bbox with negative origin
  IR[5] = 20; // xstep
  IR[6] = 20; // ystep
  IR[7] = 1; // paintType
  IR[8] = 1; // tilingType

  const pattern = new TilingPattern(IR, "black", dummyCtx, dummyGraphicsFactory, [1, 0, 0, 1, 0, 0]);

  const owner = {
    cachedCanvases: {
      getCanvas: (name, width, height) => ({
        canvas: { width, height },
        context: {
          canvas: { width, height },
          translate() {},
          save() {},
          restore() {},
        },
      }),
    },
    groupLevel: 0,
  };

  const result = pattern.createPatternCanvas(owner);
  if (result.offsetX !== -10 || result.offsetY !== -10) {
    throw new Error("Pattern offsets do not match the original bbox values.");
  }
});