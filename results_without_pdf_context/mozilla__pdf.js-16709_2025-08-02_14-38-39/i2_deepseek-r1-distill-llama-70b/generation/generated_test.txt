it("should redo an annotation using metashiftz on mac", async () => {
  const { AnnotationEditorUIManager } = await import("../../src/display/editor/tools.js");
  const { TestReporter } = await import("./testreporter.js");

  const container = document.createElement("div");
  const pdfDocument = { annotationStorage: { add: () => {}, getAnnotations: () => [] } };
  const eventBus = { _on: () => {} };
  const pageColors = {};

  const manager = new AnnotationEditorUIManager(container, eventBus, pdfDocument, pageColors);

  // Create a test annotation
  const annotation = { id: "test-annotation" };

  // Add the annotation
  manager.addAnnotation(annotation);

  // Undo the action
  manager.undo();

  // Simulate the redo keyboard event for mac
  const event = new KeyboardEvent("keydown", {
    key: "Z",
    keyCode: 90,
    which: 90,
    metaKey: true,
    shiftKey: true,
    bubbles: true,
    cancelable: true,
  });

  container.dispatchEvent(event);

  // Check if the annotation was redone
  const result = await pdfDocument.annotationStorage.getAnnotations();

  new TestReporter().assert(
    result.length === 1,
    "Redo using meta+shift+z on mac should add the annotation back"
  );
});