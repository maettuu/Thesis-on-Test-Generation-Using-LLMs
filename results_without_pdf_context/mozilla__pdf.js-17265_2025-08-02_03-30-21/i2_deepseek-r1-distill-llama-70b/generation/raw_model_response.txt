<think>
Okay, I need to write a regression test for the issue where the console error occurs when loading the PDF.js worker script in Chrome. The error is about the MIME type being incorrect. The patch provided sets the type of the Blob to "text/javascript", which should fix the issue.

First, I'll start by understanding the problem. The error happens because the Blob doesn't have a MIME type specified, so when the browser tries to load it as a module, it fails. The patch adds the MIME type, so the test should check if this fix works.

I need to create a test that replicates the scenario. The test should generate a Blob with the wrapper code and check if it has the correct MIME type after the patch. 

I'll structure the test using Jest. I'll import the necessary modules, create a Blob using the createCDNWrapper function, and then check the type of the Blob.

Wait, but how do I access the createCDNWrapper function? Looking at the code, it's part of the PDFWorkerUtil in api.js. So I'll need to import that.

In the test, I'll create a sample URL, generate the Blob using createCDNWrapper, and then check if the type is 'text/javascript'. 

Before the patch, the Blob type would be empty, causing the test to fail. After the patch, it should have the correct type, making the test pass.

I should make sure the test is self-contained and doesn't rely on any external dependencies beyond what's provided. Also, I'll use dynamic imports to ensure compatibility with Node.js.

So, putting it all together, the test will import the necessary functions, create the Blob, and assert the MIME type is correct.
</think>

```javascript
it("should set correct MIME type for worker script", async () => {
  const { PDFWorkerUtil } = await import("../../src/display/api.js");
  const url = "https://example.com/pdf.worker.mjs";
  const blob = PDFWorkerUtil.createCDNWrapper(url);
  expect(blob.type).toBe("text/javascript");
});
```