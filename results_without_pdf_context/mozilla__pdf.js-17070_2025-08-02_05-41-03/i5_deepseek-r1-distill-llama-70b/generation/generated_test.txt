it("should render comments and sticky notes in the viewer", async () => {
  const { PDFDocument } = await import("../../src/display/api.js");
  const { TestUtils } = await import("./test_utils.js");

  // Setup a fake server with the test PDF
  const server = await TestUtils.startFakeServer({
    'Testdoc.pdf': new ArrayBuffer(0)
  });

  // Open the PDF document
  const loadingTask = PDFDocument.loadingTaskFromURL("Testdoc.pdf");
  const pdf = await loadingTask.promise;

  // Get the first page
  const page = await pdf.getPage(1);

  // Create a viewer and render the page
  const viewer = {
    container: document.createElement('div'),
    get pageDiv() {
      return this.container;
    },
  };

  await page.render({
    viewport: page.getViewport({ scale: 1 }),
    canvasContext: null,
    annotationCanvasContext: null,
    renderInteractiveForms: true,
  });

  // Check if the annotations are rendered
  const expectedElements = [
    'sticky-note',
    'comment-annotation',
    'popup',
    'text'
  ].some(element => viewer.container.querySelector(`.${element}`));

  expect(expectedElements).toBeTruthy();
});