```javascript
it("should not warn about unknown field name when printing a PDF with annotations", async () => {
  const { AnnotationFactory } = await import("../../src/core/annotation.js");
  const { Dict, Name, Ref } = await import("../../src/core/primitives.js");
  const { XRefMock } = await import("./test_utils.js");
  const { AnnotationActionEventType } = await import("../../src/shared/util.js");

  const xref = new XRefMock();
  const ref = new Ref(1, 0);
  const dict = new Dict();
  dict.set("Subtype", Name.get("Widget"));
  dict.set("FT", Name.get("Tx"));
  dict.set("Kids", [new Ref(2, 0)]);
  dict.set("T", "Test");
  dict.set("F", 0);
  dict.set("Rect", [0, 0, 32, 32]);
  dict.set("C", [0, 0, 0]);
  dict.set("M", "D:20230315000000Z");

  const annotationGlobals = {
    acroForm: new Dict(),
    pdfManager: {
      ensure: (context, methodName, args) => {
        return context[methodName](...args);
      },
      evaluatorOptions: { isOffscreenCanvasSupported: false },
    },
  };

  const idFactory = createIdFactory(0);
  const annotation = await AnnotationFactory.create(
    xref,
    ref,
    annotationGlobals,
    idFactory,
    true,
    null
  );

  const expected = {
    annotationFlags: 0,
    borderStyle: undefined,
    color: [0, 0, 0],
    backgroundColor: undefined,
    borderColor: undefined,
    rotation: undefined,
    contentsObj: undefined,
    hasAppearance: false,
    id: "1R",
    modificationDate: "D:20230315000000Z",
    rect: [0, 0, 32, 32],
    subtype: "Widget",
    hasOwnCanvas: false,
    noRotate: false,
    noHTML: false,
    kidIds: ["2R"],
    actions: {},
    fieldName: "Test",
    pageIndex: 0,
  };

  expect(annotation.data).toEqual(expected);
});
```