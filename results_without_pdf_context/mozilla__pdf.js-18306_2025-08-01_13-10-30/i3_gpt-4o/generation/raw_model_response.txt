```javascript
it("should correctly render PDF with non-integer DW", async () => {
  const { PartialEvaluator } = await import("../../src/core/evaluator.js");
  const { Dict, Name } = await import("../../src/core/primitives.js");
  const { WorkerTask } = await import("../../src/core/worker.js");
  const { OperatorList } = await import("../../src/core/operator_list.js");

  const xref = new XRefMock([]);
  const handler = null;
  const pageIndex = 0;
  const idFactory = createIdFactory(pageIndex);
  const fontCache = new Map();
  const builtInCMapCache = new Map();
  const standardFontDataCache = new Map();
  const globalImageCache = new Map();
  const systemFontCache = new Map();
  const options = {};

  const evaluator = new PartialEvaluator({
    xref,
    handler,
    pageIndex,
    idFactory,
    fontCache,
    builtInCMapCache,
    standardFontDataCache,
    globalImageCache,
    systemFontCache,
    options,
  });

  const dict = new Dict();
  dict.set("DW", 500.5);
  dict.set("W", [0, 100, 200, 300]);

  const properties = { composite: true };
  const operatorList = new OperatorList();
  const task = new WorkerTask("test");

  await evaluator.extractWidths(dict, null, properties);

  const expectedDefaultWidth = 501;
  const actualDefaultWidth = properties.defaultWidth;

  expect(actualDefaultWidth).toBe(expectedDefaultWidth);
});
```