it("should display text when browserdisplayusedocumentfonts is set to", async () => {
  const { getDocument } = await import("../../src/display/api.js");
  const { PDFNodeStream } = await import("../../src/display/node_stream.js");
  const { PDFPageProxy } = await import("../../src/display/api.js");

  const url = "https://www.jma.go.jp/jma/press/2507/04a/20250704_asosan.pdf";
  const loadingTask = getDocument({ url, disableFontFace: true });
  const pdfDocument = await loadingTask.promise;
  const page = await pdfDocument.getPage(1);

  const viewport = page.getViewport({ scale: 1.0 });
  const canvasFactory = new (await import("../../src/display/canvas_factory.js")).DOMCanvasFactory();
  const canvasAndContext = canvasFactory.create(viewport.width, viewport.height);
  const renderContext = {
    canvasContext: canvasAndContext.context,
    viewport: viewport,
  };

  await page.render(renderContext).promise;

  const imageData = canvasAndContext.context.getImageData(0, 0, viewport.width, viewport.height);
  const hasVisibleText = Array.from(imageData.data).some((value, index) => index % 4 === 3 && value > 0);

  expect(hasVisibleText).toBe(true);
});