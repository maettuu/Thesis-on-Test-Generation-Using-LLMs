it("should process Blob URL response headers without throwing", async () => {
  const { PDFNetworkStreamFullRequestReader } = await import("../../src/display/network.js");
  // Simulate a Blob URL XHR response that previously triggered the Headers error.
  // The header string contains an extra non-space whitespace character at the end of the header value.
  const fakeXHR = {
    responseURL: "blob://example",
    getAllResponseHeaders() {
      return "Content-Type: application/pdf\t\r\n";
    },
  };
  const fakeManager = {
    requestFull(args) {
      return 1;
    },
    getRequestXhr(id) {
      return fakeXHR;
    },
    abortRequest(id) {},
    isHttp: true,
    _responseOrigin: null,
  };
  const source = { url: "blob://example", disableRange: true };
  // The test will fail (throwing an error) in the preâ€‘patch case.
  const reader = new PDFNetworkStreamFullRequestReader(fakeManager, source);
  (() => {
    reader._onHeadersReceived();
  })();
});
