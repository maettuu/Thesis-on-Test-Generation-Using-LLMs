it("should correctly handle xref generation numbers to prevent invalid PDFs", async () => {
  const { TestPdfsServer } = await import("./test_utils.js");
  const { getDocument } = await import("../../src/display/api.js");

  const server = new TestPdfsServer();
  try {
    // Use a known PDF that triggers the xref generation issue
    const pdfPath = `${TEST_PDFS_PATH}/issue-1978317.pdf`;
    const loadingTask = getDocument({
      url: server.urlFor(pdfPath),
      httpHeaders: { "X-Test-Source": "unitTest" },
    });

    const pdfDoc = await loadingTask.promise;
    const expectedError = new InvalidPDFException("Invalid PDF structure");
    const actualError = await pdfDoc.loadError;

    assert strictEqual(actualError, undefined,
      `Expected PDF to load without error, but got: ${actualError}`);
  } catch (error) {
    throw new Error(`PDF failed to load: ${error.message}`);
  } finally {
    await server.stop();
  }
});