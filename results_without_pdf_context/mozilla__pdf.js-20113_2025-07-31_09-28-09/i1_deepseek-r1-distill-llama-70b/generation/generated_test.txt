it("should correctly handle HTML spec PDFs when printed to PDF", async () => {
  const { TestPdfsServer } = await import("./test_utils.js");
  const { getDocument } = await import("../../src/display/api.js");

  const server = new TestPdfsServer();
  try {
    await server.start();
    const pdfPath = `${TEST_PDFS_PATH}/html-spec.pdf`;
    const loadingTask = await getDocument({
      url: server.url + pdfPath,
      transport: new PDFDataRangeTransport(),
    });
    const document = await loadingTask.document;
    // If we don't get an exception, the test passes (since previously it would fail)
  } catch (error) {
    if (error instanceof InvalidPDFException) {
      throw new Error("PDF is invalid even after the fix");
    }
  } finally {
    await server.stop();
  }
});