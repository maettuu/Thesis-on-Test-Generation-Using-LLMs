it("should correctly handle xref entries with mismatched generation numbers", async () => {
  const { XRef } = await import("../../src/core/xref.js");
  const { Ref } = await import("../../src/core/primitives.js");

  // Create a mock stream and pdfManager for testing
  const stream = {
    makeSubStream: () => ({ start: 0, end: 0 }),
    dict: { First: 0, N: 1 }
  };
  const pdfManager = { getStdFont: async () => null };

  const xref = new XRef(stream, pdfManager);
  const ref = Ref.get(1, 0);

  try {
    await xref.fetchCompressed(ref, { offset: 0, gen: 0 });
    assert(true, "Expected XRefEntryException to be thrown but wasn't");
  } catch (error) {
    if (error instanceof XRefEntryException) {
      assert(true, "Correctly throws XRefEntryException for mismatched gen");
    } else {
      assert(false, `Unexpected error: ${error.message}`);
    }
  }
});