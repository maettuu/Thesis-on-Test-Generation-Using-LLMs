it("should render PolygonAnnotation with fill color", async () => {
  const { AnnotationFactory, MarkupAnnotation, PolylineAnnotation, PolygonAnnotation } = await import("../../src/core/annotation.js");
  const { getQuadPoints } = await import("../../src/core/annotation.js");
  const { ColorSpaceUtils } = await import("../../src/core/colorspace_utils.js");
  const { FakeUnicodeFont } = await import("../../src/core/default_appearance.js");
  const { Dict } = await import("../../src/core/primitives.js");
  const { Stream } = await import("../../src/core/stream.js");
  const { Name } = await import("../../src/core/primitives.js");
  const { Ref } = await import("../../src/core/primitives.js");
  const { XRef } = await import("../../src/core/xref.js");

  const xref = new XRef();
  const dict = new Dict(xref);
  dict.set("Subtype", Name.get("Polygon"));
  dict.set("Rect", [0, 0, 100, 100]);
  dict.set("Vertices", [10, 10, 90, 10, 90, 90, 10, 90]);
  dict.set("IC", [1, 0, 0]); // Red fill color
  dict.set("C", [0, 0, 0]); // Black border color

  const annotation = await AnnotationFactory.create(xref, new Ref(xref), { pdfManager: {} }, () => {}, false, null, null);
  const polygonAnnotation = annotation instanceof PolygonAnnotation;

  expect(polygonAnnotation).toBe(true);
});