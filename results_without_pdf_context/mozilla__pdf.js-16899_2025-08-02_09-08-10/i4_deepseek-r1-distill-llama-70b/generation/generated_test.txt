it("should display FreeText annotation popup", async () => {
  const { PDFDocument, PDFPageProxy } = await import("../../src/display/api.js");
  const { AnnotationLayer } = await import("../../src/display/annotation_layer.js");

  // Create a sample PDF with FreeText annotation
  const pdfContent = new Uint8Array([
    0x25, 0x50, 0x44, 0x46, 0x2D, 0x31, 0x2E, 0x30, 0x0A, 0x25, 0xB5, 0xB5, 0xB5, 0xB5, 0x0A, 0x08,
    0x30, 0x30, 0x30, 0x30, 0x0A, 0x25, 0xE2, 0xE3, 0xCF, 0xD0, 0x0A, 0x31, 0x32,
    0x30, 0x30, 0x0A, 0x28, 0x2F, 0x2F, 0x2F, 0x2F, 0x0A, 0x28, 0x2F, 0x2F, 0x2F,
    0x2F, 0x0A, 0x28, 0x2F, 0x2F, 0x2F, 0x2F, 0x0A, 0x28, 0x2F, 0x2F, 0x2F,
    0x2F, 0x0A, 0x25, 0xE2, 0xE3, 0xCF, 0xD0, 0x0A, 0x31, 0x32, 0x30, 0x30,
    0x0A, 0x25, 0xE2, 0xE3, 0xCF, 0xD0, 0x0A, 0x30, 0x30, 0x30, 0x30, 0x0A,
    0x25, 0xE2, 0xE3, 0xCF, 0xD0, 0x0A, 0x25, 0xE2, 0xE3, 0xCF, 0xD0,
  ]).buffer;

  const pdf = await PDFDocument.load({
    data: pdfContent,
    container: null,
    autoFetch: false,
    cMapUrl: null,
    maxCanvasPixels: null,
  });

  const page = await pdf.getPage(1);
  const viewport = page.getViewPort({ scale: 1 });
  const annotationLayer = new AnnotationLayer({
    div: document.createElement("div"),
    page,
    viewport,
    l10n: null,
    accessibilityManager: null,
  });

  // Simulate FreeText annotation data
  const annotations = [
    {
      id: "freeText1",
      annotationType: "FREETEXT",
      titleObj: { str: "Test Title" },
      contentsObj: { str: "Test Content" },
      popupRef: null,
      rect: [0, 0, 100, 100],
    },
  ];

  await annotationLayer.render({
    annotations,
    div: annotationLayer.div,
    page,
    viewport,
    linkService: null,
    downloadManager: null,
    imageResourcesPath: "",
    renderForms: true,
    enableScripting: false,
    hasJSActions: false,
    fieldObjects: null,
    annotationCanvasMap: null,
  });

  const popup = annotationLayer.div.querySelector(".popup");
  expect(popup).toBeTruthy();
});