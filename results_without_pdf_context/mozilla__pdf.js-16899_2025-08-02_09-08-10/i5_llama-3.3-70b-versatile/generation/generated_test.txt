it("should display FreeText annotation", async () => {
  const { PDFDocument } = await import("../../src/display/api.js");
  const { AnnotationLayer } = await import("../../src/display/annotation_layer.js");
  const pdf = await PDFDocument.load(await (await import("../../src/display/network.js")).PDFNetworkStream.fetch("path_to_pdf_with_freetext_annotation"));
  const page = await pdf.getPage(1);
  const annotationLayer = new AnnotationLayer({
    page,
    viewport: page.getViewport({ scale: 1 }),
    renderInteractiveForms: false,
  });
  const annotations = await page.getAnnotations();
  const freeTextAnnotation = annotations.find(annotation => annotation.subtype === "FreeText");
  const annotationElement = annotationLayer.renderAnnotation(freeTextAnnotation);
  const popupElement = annotationElement.container.querySelector(".popup");
  const expected = freeTextAnnotation.contents;
  const actual = popupElement && popupElement.textContent;
  expect(actual).toBe(expected);
});