it("should display FreeText annotation", async () => {
  const { AnnotationElementFactory, AnnotationLayer, AnnotationPrefix } = await import("../../src/display/annotation_layer.js");
  const { PDFPageProxy, PageViewport } = await import("../../src/display/api.js");
  const { NullL10n } = await import("../../web/l10n_utils.js");
  const { AnnotationStorage } = await import("../../src/display/annotation_storage.js");

  const annotation = {
    id: "123",
    annotationType: "FREETEXT",
    rect: [10, 10, 50, 50],
    titleObj: { str: "Title" },
    contentsObj: { str: "Contents" },
  };

  const page = { view: [0, 0, 100, 100] };
  const viewport = new PageViewport({ page, rotation: 0, scale: 1 });
  const div = document.createElement("div");
  const linkService = { eventBus: { dispatch: () => {} } };
  const downloadManager = {};
  const annotationStorage = new AnnotationStorage();
  const l10n = new NullL10n();

  const annotationLayer = new AnnotationLayer({
    div,
    accessibilityManager: null,
    annotationCanvasMap: null,
    l10n,
    page: new PDFPageProxy({}),
    viewport,
  });

  await annotationLayer.render({
    annotations: [annotation],
    div,
    linkService,
    downloadManager,
    annotationStorage,
    l10n,
    page: new PDFPageProxy({}),
    viewport,
    renderForms: true,
  });

  const freeTextAnnotation = div.querySelector(`[${AnnotationPrefix}id="123"]`);
  expect(freeTextAnnotation).not.toBeNull();
});