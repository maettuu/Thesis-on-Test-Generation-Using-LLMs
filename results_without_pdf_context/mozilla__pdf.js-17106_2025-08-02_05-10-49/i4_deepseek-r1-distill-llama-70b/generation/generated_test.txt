it("should release ImageBitmap data after cleanup", async () => {
  const { PDFDocument, PDFWorker } = await import("../../src/display/api.js");
  const pdfPath = `${TEST_PDFS_PATH}/large-image.pdf`;

  // Create a new worker instance
  const worker = new PDFWorker({ verbosity: 'error' });
  const loadingTask = getDocument({ url: pdfPath, worker: worker });

  // Load the document and get the page
  const pdfDoc = await loadingTask.promise;
  const page = await pdfDoc.getPage(1);

  // Render the page to force image loading
  const { canvasContext } = await import("../../src/display/display_utils.js");
  const canvas = new canvasContext();
  const viewport = page.getViewport({ scale: 1 });

  await page.render({
    canvasContext: canvas.getContext('2d'),
    viewport: viewport
  });

  // Verify memory before cleanup
  const beforeMemory = process.memoryUsage().rss;

  // Perform cleanup
  await pdfDoc.cleanup();

  // Verify memory after cleanup
  const afterMemory = process.memoryUsage().rss;

  // The memory should have decreased significantly after cleanup
  expect(afterMemory).toBeLessThan(beforeMemory);
});