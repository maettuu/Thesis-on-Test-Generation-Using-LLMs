it("should correctly handle vertical Japanese punctuation in PDFs", async () => {
  const { Font } = await import("../../src/core/fonts.js");
  const { getVerticalPresentationForm } = await import("../../src/core/fonts_utils.js");

  // Create a test character and its expected vertical form
  const char = String.fromCharCode(0x3001); // IDEOGRAPHIC COMMA
  const expectedVerticalForm = String.fromCharCode(getVerticalPresentationForm()[0x3001]);

  // Initialize Font instance with vertical writing enabled and missing file
  const font = new Font();
  font.missingFile = true;
  font.vertical = true;

  // Apply the patch's logic to the character
  let actualChar = char;
  const unicode = char.charCodeAt(0);
  const vertical = getVerticalPresentationForm()[unicode];
  if (vertical) {
    actualChar = String.fromCharCode(vertical);
  }

  // Verify the character was replaced with its vertical form
  expect(actualChar).toBe(expectedVerticalForm);
});