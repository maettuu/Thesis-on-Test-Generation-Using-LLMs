it("should improve performance by avoiding subarray creation when optimizing save transform constructPath restore", async () => {
  const { Util } = await import("../../src/shared/util.js");
  const { OperatorList } = await import("../../src/core/operator_list.js");
  const { Commands } = await import("../../src/core/font_renderer.js");

  const buffer = new Float64Array([1, 2, 3, 4, 5, 6]);
  const transform = [1, 0, 0, 1, 0, 0];

  const startTime = performance.now();
  for (let i = 0; i < 10000; i++) {
    Util.applyTransform(buffer, transform);
  }
  const endTime = performance.now();
  const timeTaken = endTime - startTime;

  const expectedTimeTaken = 10; // Adjust this value based on your system's performance

  expect(timeTaken).toBeLessThan(expectedTimeTaken);
});