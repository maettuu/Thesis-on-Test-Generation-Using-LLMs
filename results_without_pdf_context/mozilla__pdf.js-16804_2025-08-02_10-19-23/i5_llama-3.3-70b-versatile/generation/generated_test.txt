it("should render embedded images with correct opacity", async () => {
  const { PDFDocument, PDFPage } = await import("../../src/core/document.js");
  const { AnnotationLayer } = await import("../../src/display/annotation_layer.js");
  const { PDFViewer } = await import("../../web/pdf_viewer.js");
  const { createIdFactory } = await import("./test_utils.js");

  const pdfUrl = `${TEST_PDFS_PATH}TS354_Week_2_slides.pdf`;
  const pdf = await PDFDocument.load(pdfUrl);
  const page = await pdf.getPage(2);
  const pdfViewer = new PDFViewer();
  const annotationLayer = new AnnotationLayer({
    page,
    viewport: page.getViewport({ scale: 1 }),
    renderInteractiveForms: false,
  });
  const annotationStorage = annotationLayer.annotationStorage;
  const annotations = await annotationStorage.getAnnotations();
  const fileAttachmentAnnotation = annotations.find(
    (annotation) => annotation instanceof FileAttachmentAnnotation
  );
  const trigger = annotationLayer.render();
  const expectedOpacity = fileAttachmentAnnotation.data.fillAlpha;
  const actualOpacity = trigger.style.filter.match(/opacity\((\d+)%\)/)[1] / 100;
  expect(actualOpacity).toBeCloseTo(expectedOpacity);
});