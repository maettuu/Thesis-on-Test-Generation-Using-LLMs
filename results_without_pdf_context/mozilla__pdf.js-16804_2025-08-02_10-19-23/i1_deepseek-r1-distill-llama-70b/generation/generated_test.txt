it("should remove embedded images when fillAlpha is", async () => {
  const { XRefMock, createIdFactory } = await import("./test_utils.js");
  const { Dict, Name, Ref } = await import("../../src/core/primitives.js");
  const { FileAttachmentAnnotation } = await import("../../src/core/annotation.js");
  const { FileAttachmentAnnotationElement } = await import("../../src/display/annotation_layer.js");

  // Create mock objects
  const xref = new XRefMock();
  const idFactory = createIdFactory();
  const dict = new Dict();
  dict.set("FS", new Dict());
  dict.set("Name", new Name("PushPin"));
  dict.set("CA", 0); // Set fillAlpha to 0

  // Create annotation and element
  const annotation = new FileAttachmentAnnotation({ dict, xref });
  const element = new FileAttachmentAnnotationElement({
    annotation,
    page: { viewport: { width: 100, height: 100 } },
    imageResourcesPath: "../../web/images/",
    linkService: { eventBus: { dispatch: () => {} } }
  });

  // Render the element
  const container = element.render();
  const trigger = element.#trigger;

  // After patch, trigger should be null when fillAlpha is 0
  expect(trigger).toBeNull();
});