it("should correctly resize SVG images", async () => {
  const { PDFDocumentProxy } = await import("../../src/display/api.js");
  const { SVGGraphics } = await import("../../src/display/svg.js");
  const { createIdFactory } = await import("./test_utils.js");

  // Create a test SVG image
  const svg = `<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100"><rect width="100" height="100" fill="red"/></svg>`;
  const blob = new Blob([svg], { type: "image/svg+xml" });
  const url = URL.createObjectURL(blob);

  // Create a PDF document with the SVG image
  const pdf = await PDFDocumentProxy.load({
    data: new Uint8Array(),
    fingerprint: createIdFactory(),
    url: url,
  });

  const page = await pdf.getPage(1);
  const viewport = page.getViewport({ scale: 1 });

  // Check if the SVG image can be resized
  const expectedWidth = 200;
  const expectedHeight = 200;
  const actualDimensions = await page.getImageDimensions();

  expect(actualDimensions.width).toBe(expectedWidth);
  expect(actualDimensions.height).toBe(expectedHeight);
});