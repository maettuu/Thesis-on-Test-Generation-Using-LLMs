it("should call endPath before clipping and begin a new path for annotation rendering", async () => {
  const log = [];
  const fakeCtx = {
    canvas: { width: 200, height: 200 },
    rect(x, y, w, h) { log.push("rect"); },
    clip() { log.push("clip"); },
    beginPath() { log.push("beginPath"); },
    save() {},
    setTransform() {}
  };
  const { CanvasGraphics } = await import("../../src/display/canvas.js");
  // Create a minimal dummy canvasFactory that won't be used in this branch.
  const dummyCanvasFactory = { create: (w, h) => ({ canvas: { width: w, height: h }, context: fakeCtx }) };
  const cg = new CanvasGraphics(fakeCtx, {}, {}, dummyCanvasFactory, null, { optionalContentConfig: null, markedContentStack: null }, new Map(), null);
  // Override endPath to log and avoid any internal logic.
  cg.endPath = function() { log.push("endPath"); };
  const rect = [0, 0, 100, 50], transform = [1, 0, 0, 1, 0, 0], matrix = [1, 0, 0, 1, 0, 0];
  // hasOwnCanvas is false to ensure the else branch is executed.
  cg.beginAnnotation("testAnnot", rect, transform, matrix, false);
  if (log.join(",") !== "endPath,rect,clip,beginPath") {
    throw new Error("Expected call order 'endPath,rect,clip,beginPath' but got: " + log.join(","));
  }
});
