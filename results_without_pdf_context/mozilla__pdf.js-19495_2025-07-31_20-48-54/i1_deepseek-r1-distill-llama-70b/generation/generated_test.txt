it("should correctly detect inline image end marker with extended peek for operators", async () => {
  const { Parser, Lexer } = await import("../../src/core/parser.js");
  const { StringStream } = await import("../../src/core/stream.js");
  const knownCommands = { cm: { variableArgs: false, numArgs: 6 } };
  // The inline image data is "DATA", followed by an EI marker and then a valid operator "cm"
  // which is only fully visible when peeking 5*n bytes.
  const data = "DATAEI abcdefghij1 2 3 4 5 6 cm";
  const stream = new StringStream(data);
  const lexer = new Lexer(stream, knownCommands);
  const parser = new Parser({ lexer, xref: null });
  stream.pos = 0;
  const inlineLength = parser.findDefaultInlineStreamEnd(stream);
  if (inlineLength !== 4) {
    throw new Error(`Expected inline image length 4, but got ${inlineLength}`);
  }
});