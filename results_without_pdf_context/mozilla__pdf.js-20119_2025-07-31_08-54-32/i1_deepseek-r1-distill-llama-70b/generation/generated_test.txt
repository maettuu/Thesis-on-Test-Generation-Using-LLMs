it("should add context menu entries for highlight and comment", async () => {
  const { AnnotationEditorUIManager } = await import("../../src/display/editor/tools.js");
  const { FloatingToolbar } = await import("../../src/display/editor/toolbar.js");

  // Setup DOM
  const container = document.createElement("div");
  document.body.appendChild(container);
  const textLayer = document.createElement("div");
  textLayer.className = "textLayer";
  container.appendChild(textLayer);

  // Setup UI Manager
  const uiManager = new AnnotationEditorUIManager(
    container,
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {}
  );

  // Setup test state
  const selection = window.getSelection();
  selection.removeRange(window.document.createRange());
  const range = document.createRange();
  range.selectNode(textLayer);
  selection.addRange(range);

  // Mock methods
  const highlightSpy = jest.spyOn(uiManager, "highlightSelection");
  const commentSpy = jest.spyOn(uiManager, "commentSelection");

  // Test context menu entries
  const event = { name: "highlightSelection" };
  uiManager.onEditingAction(event);
  expect(highlightSpy).toHaveBeenCalledWith("context_menu");

  const commentEvent = { name: "commentSelection" };
  uiManager.onEditingAction(commentEvent);
  expect(commentSpy).toHaveBeenCalledWith("context_menu");

  // Cleanup
  document.body.removeChild(container);
});