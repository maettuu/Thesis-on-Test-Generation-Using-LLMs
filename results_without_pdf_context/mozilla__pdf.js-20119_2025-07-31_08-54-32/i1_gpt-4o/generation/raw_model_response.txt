```javascript
it("should highlight and comment the text selection in a pdf", async () => {
  const { AnnotationEditorUIManager } = await import("../../src/display/editor/tools.js");
  const { PDFDocumentProxy } = await import("../../src/display/api.js");

  const mockCommentManager = { destroy: () => {} };
  const mockSignatureManager = { destroy: () => {} };
  const mockEventBus = { _on: () => {} };
  const mockPdfDocument = { annotationStorage: {}, filterFactory: {} };
  const mockContainer = document.createElement("div");
  const mockViewer = document.createElement("div");
  const mockViewerAlert = document.createElement("div");

  const uiManager = new AnnotationEditorUIManager(
    mockContainer,
    mockViewer,
    mockViewerAlert,
    null,
    mockCommentManager,
    mockSignatureManager,
    mockEventBus,
    mockPdfDocument,
    null,
    null,
    true,
    false,
    false,
    null,
    null,
    true
  );

  const selection = window.getSelection();
  const range = document.createRange();
  const textNode = document.createTextNode("Sample text for testing.");
  document.body.appendChild(textNode);
  range.selectNodeContents(textNode);
  selection.removeAllRanges();
  selection.addRange(range);

  uiManager.onEditingAction({ name: "commentSelection" });

  const expected = true;
  const actual = selection.isCollapsed;
  expect(actual).toBe(expected);

  document.body.removeChild(textNode);
});
```