it("should add highlight and comment options to context menu", async () => {
  const { AnnotationEditorUIManager } = await import("../../src/display/editor/tools.js");
  const { FloatingToolbar } = await import("../../src/display/editor/toolbar.js");

  const uiManager = new AnnotationEditorUIManager();
  const textLayer = {
    closest: () => ({
      getBoundingClientRect: () => ({ top: 0, left: 0, right: 100, bottom: 100 }),
    }),
  };

  const mockDispatch = jest.fn();
  document.dispatchEvent = mockDispatch;

  const selection = {
    isCollapsed: false,
    anchorNode: {},
    rangeCount: 1,
  };

  const getSelectionSpy = jest.spyOn(global, "getSelection").mockReturnValue(selection);

  const contextMenuEvent = new Event("contextmenu");
  contextMenuEvent.initMouseEvent(
    "contextmenu",
    true,
    true,
    window,
    0,
    0,
    0,
    0,
    0,
    false,
    false,
    false,
    false,
    0,
    null
  );

  document.dispatchEvent(contextMenuEvent);

  const menuCreated = await new Promise(resolve => {
    const listener = ({ detail }) => {
      if (detail.type === "highlightSelection") {
        resolve(true);
      }
    };
    document.addEventListener("menu-creation", listener);
    document.dispatchEvent(contextMenuEvent);
  });

  expect(menuCreated).toBe(true);
});