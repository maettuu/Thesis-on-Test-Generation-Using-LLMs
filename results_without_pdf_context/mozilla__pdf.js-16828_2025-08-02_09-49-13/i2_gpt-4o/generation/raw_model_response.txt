```javascript
it("should paste an image from the clipboard in editing mode", async () => {
  const { AnnotationEditorUIManager } = await import("../../src/display/editor/tools.js");
  const { AnnotationEditorLayer } = await import("../../src/display/editor/annotation_editor_layer.js");
  const { StampEditor } = await import("../../src/display/editor/stamp.js");
  const { AnnotationEditorType } = await import("../../src/shared/util.js");

  const mockEvent = {
    preventDefault: () => {},
    clipboardData: {
      items: [
        {
          type: "image/png",
          getAsFile: () => new File([""], "test.png", { type: "image/png" }),
        },
      ],
    },
  };

  const uiManager = new AnnotationEditorUIManager(null, null, null, { annotationStorage: {} }, null);
  const layer = new AnnotationEditorLayer({
    uiManager,
    pageIndex: 0,
    div: document.createElement("div"),
    accessibilityManager: null,
    annotationLayer: null,
    viewport: { rotation: 0, rawDims: { pageWidth: 100, pageHeight: 100, pageX: 0, pageY: 0 } },
    l10n: null,
  });

  uiManager.addLayer(layer);
  uiManager.updateMode(AnnotationEditorType.STAMP);

  uiManager.paste(mockEvent);

  const editors = Array.from(layer.#editors.values());
  const pastedEditor = editors.find(editor => editor instanceof StampEditor);

  expect(pastedEditor).not.toBeUndefined();
  expect(pastedEditor.#bitmapFile).toBeInstanceOf(File);
  expect(pastedEditor.#bitmapFile.name).toBe("test.png");
});
```