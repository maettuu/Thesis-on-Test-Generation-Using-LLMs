<think>
Okay, I need to write a regression test for the numberToString function in pdf.js. The bug is that when null is passed, it returns "0", but the expected behavior is to handle null properly, not convert it to zero. 

First, I should look at the patch provided. The patch adds an assertion that checks if the value is a number. So, in testing environments, if a non-number is passed, it should throw an error.

My test needs to fail before the patch and pass after. So, I'll write a test that passes null to numberToString. Before the patch, it returns "0" without error. After the patch, in testing mode, it should throw an assertion error.

I'll structure the test using Jest syntax. I'll import the necessary module, then call numberToString with null. Since the patch adds an assert, in the test environment, this should throw an error. 

I'll use a try-catch block. Before the patch, no error is thrown, so the test would fail. After the patch, the error is thrown, so the test passes.

I need to make sure the test is self-contained and only uses the provided imports. I'll import core_utils.js dynamically. 

So, the test will check if passing null throws an assertion error, which it should after the patch. This way, the test validates the fix.
</think>

```javascript
it("should throw when null is passed to numberToString", async () => {
  const { numberToString } = await import("../../src/core/core_utils.js");
  const value = null;
  
  expect(() => numberToString(value)).toThrow(
    "numberToString - the value (null) should be a number."
  );
});
```