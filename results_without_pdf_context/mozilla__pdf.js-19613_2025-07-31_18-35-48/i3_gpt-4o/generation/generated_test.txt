it("should use fallback dimensions for images with invalid widthheight", async () => {
  const { PDFImage } = await import("../../src/core/image.js");
  const fakeDict = {
    get(key, alt) {
      if (key === "W" || alt === "Width") {
        return 0;
      }
      if (key === "H" || alt === "Height") {
        return 0;
      }
      return undefined;
    },
  };
  const fakeImage = { dict: fakeDict, fallbackDims: { width: 150, height: 250 } };
  const fakeXref = { fetchIfRef: (obj) => obj };
  const pdfImage = new PDFImage({
    xref: fakeXref,
    res: {},
    image: fakeImage,
    pdfFunctionFactory: {},
    globalColorSpaceCache: {},
    localColorSpaceCache: {},
  });
  if (pdfImage.width !== 150 || pdfImage.height !== 250) {
    throw new Error(`Expected fallback dimensions (150x250), but got (${pdfImage.width}x${pdfImage.height}).`);
  }
});
