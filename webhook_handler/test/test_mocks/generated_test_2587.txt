
@responses.activate
def test_check_resolution_comments():
    """Test the check_resolution_comments method for various resolution comment scenarios"""

    from bugbot.rules.perfalert_resolved_regression import PerfAlertResolvedRegression

    # Mock data for bug comments and history
    comments = [
        {
            "creation_time": "2023-10-01T10:00:00Z",
            "author": "user1@example.com",
            "text": "This issue is resolved as fixed.",
        },
        {
            "creation_time": "2023-10-01T09:55:00Z",
            "author": "user2@example.com",
            "text": "This looks like a duplicate of another bug.",
        },
        {
            "creation_time": "2023-10-01T09:50:00Z",
            "author": "user1@example.com",
            "text": "Investigating the issue further.",
        },
    ]

    bug_history = {
        "status_time": "2023-10-01T10:00:00Z",
        "status_author": "user1@example.com",
    }

    # Instantiate the class and call the method
    rule = PerfAlertResolvedRegression()
    rule.check_resolution_comments(comments, bug_history)

    # Assert the correct resolution comment is selected
    assert (
        bug_history["resolution_comment"] == "This issue is resolved as fixed."
    ), "Failed to match the resolution comment provided by the status author at the same time."

    # Modify the history to test preceding comment logic
    bug_history["status_time"] = "2023-10-01T09:56:00Z"
    bug_history["resolution_comment"] = "N/A"
    rule.check_resolution_comments(comments, bug_history)

    assert (
        bug_history["resolution_comment"] == "This looks like a duplicate of another bug."
    ), "Failed to match the preceding comment with resolution keywords."

    # Modify the history to test no valid comment scenario
    bug_history["status_time"] = "2023-10-01T09:45:00Z"
    bug_history["resolution_comment"] = "N/A"
    rule.check_resolution_comments(comments, bug_history)

    assert (
        bug_history["resolution_comment"] == "N/A"
    ), "Resolution comment should remain 'N/A' when no valid comments are found."