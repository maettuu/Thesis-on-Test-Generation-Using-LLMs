import { TextHighlighter } from "../../web/text_highlighter.js";

describe('TextHighlighter', function() {
  it('should correctly calculate the left offset for selected text', function() {
    // Mocking necessary elements and properties
    const div = document.createElement('div');
    const span = document.createElement('span');
    const textNode = document.createTextNode('sample text');
    span.appendChild(textNode);
    div.appendChild(span);
    document.body.appendChild(div);

    const mockFindController = {
      selected: { pageIdx: 0, matchIdx: 0 },
      state: { highlightAll: false },
      scrollMatchIntoView: sinon.spy(),
    };

    const textHighlighter = new TextHighlighter({
      findController: mockFindController,
      eventBus: {},
      pageIndex: 0,
    });

    textHighlighter.textDivs = [div];
    textHighlighter.textContentItemsStr = ['sample text'];

    // Mocking getClientRects and getBoundingClientRect
    span.getClientRects = () => [{ left: 100 }];
    div.getBoundingClientRect = () => ({ left: 50 });

    const matches = [{ begin: { divIdx: 0, offset: 0 }, end: { divIdx: 0, offset: 6 } }];
    textHighlighter._renderMatches(matches);

    // Check if the left offset is calculated correctly
    sinon.assert.calledWith(mockFindController.scrollMatchIntoView, sinon.match({
      selectedLeft: 50
    }));

    // Clean up
    document.body.removeChild(div);
  });
});